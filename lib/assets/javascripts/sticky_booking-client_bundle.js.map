{"version":3,"sources":["webpack:///javascripts/sticky_booking-client_bundle.js","webpack:///./src/startup/index.js","webpack:///./src/components/occsnApp.js","webpack:///./src/components/booking/booking.component.js","webpack:///./src/components/booking/booking.component.nghtml","webpack:///./src/components/booking/complete.component.js","webpack:///./src/components/booking/complete.component.nghtml","webpack:///./src/components/calendar/calendar.component.js","webpack:///./src/components/calendar/calendar.component.nghtml","webpack:///./src/services/occasionSDK.service.js","webpack:///./src/components/occsnApp.nghtml"],"names":["webpackJsonp","287","module","exports","__webpack_require__","288","angular","element","bootstrap","document","504","505","templateUrl","component","controller","$scope","this","$onInit","$on","event","data","merchant","product","title","order","508","$","moment","_","$http","$filter","$window","occasionSDKService","console","log","displayLoading","initialDataLoaded","calendarDataLoaded","orderLoaded","staticProductID","window","OCCSN","product_id","orderErrors","activeRedeemable","redeemableError","redeemableStatus","showNav","submitting","maxStep","step","bind","pageYOffset","$apply","loadInitialData","Promise","all","getMyMerchant","getProductById","then","values","psp","pspName","tz","setDefault","timeZone","isNull","firstTimeSlotStartsAt","alert","$broadcast","$emit","createOrderForProduct","catch","errors","TypeError","map","error","details","sessionDuration","duration","asHours","clickGoToStep","goToStep","scrollToAnchor","getStarted","$watch","selectedDate","availableSlots","availableTimeSlots","onTimeSlotSelection","timeSlot","preventDefault","selectedTimeSlot","timeSlots","assign","startOrder","newValue","isActiveTimeSlot","activeTimeSlot","target","first","isUndefined","startsAt","isSame","numToCurrency","n","currency","code","answerForQuestion","question","answers","detect","a","titleForCheckbox","checkbox","formControl","category","operation","price","percentage","titleForOption","option","titleForSpinButton","answer","value","parseFloat","max","defaultOptionFor","options","o","default","optionableQuestionChanged","assignOption","answerChanged","priceCalculating","calculatePrice","attributes","hasSubtotal","free","subtotal","requiresPayment","outstandingBalance","optionsHolder","useSpreedly","useSquare","paymentForm","SqPaymentForm","applicationId","square_key","inputClass","inputStyles","fontSize","cardNumber","elementId","placeholder","cvv","expirationDate","postalCode","callbacks","methodsSupported","methods","applePayBtn","getElementById","applePayLabel","masterpassBtn","masterpassLabel","style","display","cardNonceResponseReceived","nonce","cardData","forEach","creditCard","buildCard","charge","submitOrder","unsupportedBrowserDetected","inputEventReceived","inputEvent","eventType","paymentFormLoaded","build","Spreedly","init","spreedly_key","numberEl","cvvEl","on","setFieldType","setNumberFormat","setPlaceholder","setStyle","name","type","activeEl","inputProperties","token","pmData","checkRedeemable","redeemables","findBy","redeemable","redeemableType","disabled","balance","assignCoupon","discountFixed","discountPercentage","removeRedeemable","removeCharge","submitPaymentForms","submitSquareForm","submitSpreedlyForm","requestCardNonce","requiredFields","tokenizeCreditCard","save","persisted","toArray","aid","aTag","animate","scrollTop","offset","top","formatToTime","dateString","format","formatToDate","formatToFullDatetime","splitByTimeOfDay","time","hour","509","path","run","c","put","510","bindings","511","512","_require","extendMoment","setTimeSlotsForMonth","month","timeSlotsByMonth","getTimeSlotsForMonth","firstDay","activeCalendarMonth","startOf","getTimeSlotsByMonth","calendarWeeks","getCalendarWeeksForMonth","startDate","endDate","endOf","weeks","currentWeek","each","Array","from","range","by","day","push","moveMonthAhead","nextMonth","add","has","getNewTimeSlots","moveMonthBack","subtract","canMoveMonthBack","isAfter","newTimeSlots","getDisplayClassForDay","isBefore","timeSlotForDay","str","onDateSelection","availableTimeSlotsForDay","select","513","514","ActiveResource","Occasion","factory","$q","_this","occsnKey","api_key","url","host_url","undefined","baseUrl","prototype","Links","__constructLink","occsn","Client","Product","afterRequest","TimeSlot","queryMyMerchant","when","Merchant","includes","queryTimeSlotsByMonth","today","lowerRange","upperRange","clone","numRequests","Math","min","ceil","diff","i","requests","lower","upper","where","ge","toDate","le","status","timeSlotsArray","Collection","ts","flatten","queryProductById","id","products","find","queryToCreateOrderForProduct","Order","construct","queryBuildCard","CreditCard","queryRedeemableType","klass","Coupon","GiftCard","590"],"mappings":"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","file":"javascripts/sticky_booking-client_bundle.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 287:\n/*!***************************!*\\\n  !*** multi ./src/startup ***!\n  \\***************************/\n/*! dynamic exports provided */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(/*! /Users/nicklandgrebe/dev/StickyBooking/src/startup */288);\n\n\n/***/ }),\n\n/***/ 288:\n/*!******************************!*\\\n  !*** ./src/startup/index.js ***!\n  \\******************************/\n/*! dynamic exports provided */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n__webpack_require__(/*! babel-polyfill */ 289);\nvar angular = __webpack_require__(/*! angular */ 46);\n__webpack_require__(/*! angular-animate */ 492);\n__webpack_require__(/*! angular-sanitize */ 494);\n__webpack_require__(/*! angular-spinner */ 496);\n\n__webpack_require__(/*! jquery */ 70);\n__webpack_require__(/*! chosen-js */ 499);\n\n__webpack_require__(/*! moment-range */ 138);\n\n__webpack_require__(/*! animate.css/animate.css */ 502);\n__webpack_require__(/*! bootstrap/dist/css/bootstrap.css */ 503);\n\n__webpack_require__(/*! ../styles/index.scss */ 504);\n\nangular.module('StickyBooking', ['angularSpinner', 'ngAnimate', 'ngSanitize']);\n\n__webpack_require__(/*! ../components/occsnApp */ 505);\n\nangular.element(function () {\n  angular.bootstrap(document, ['StickyBooking']);\n});\n\n/***/ }),\n\n/***/ 504:\n/*!*******************************!*\\\n  !*** ./src/styles/index.scss ***!\n  \\*******************************/\n/*! dynamic exports provided */\n/*! all exports used */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 505:\n/*!************************************!*\\\n  !*** ./src/components/occsnApp.js ***!\n  \\************************************/\n/*! dynamic exports provided */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar angular = __webpack_require__(/*! angular */ 46);\nvar $ = __webpack_require__(/*! jquery */ 70);\n\nvar moment = __webpack_require__(/*! moment */ 1);\n__webpack_require__(/*! moment-timezone */ 262);\nvar _ = __webpack_require__(/*! underscore */ 52);\n\n__webpack_require__(/*! ../components/booking/booking.component */ 508);\n__webpack_require__(/*! ../components/booking/complete.component */ 510);\n__webpack_require__(/*! ../components/calendar/calendar.component */ 512);\n__webpack_require__(/*! ../services/occasionSDK.service */ 514);\n\nvar templateUrl = __webpack_require__(/*! ./occsnApp.nghtml */ 590);\n\n//Creating bookingPage component on StickyBooking Module\nangular.module('StickyBooking').component('occsnApp', {\n  templateUrl: templateUrl,\n  controller: ['$scope', function AppController($scope) {\n    this.$onInit = function () {\n      $scope.$on('initialDataLoaded', function (event, data) {\n        $scope.merchant = data.merchant;\n        $scope.product = data.product;\n\n        document.title = data.product.title;\n      });\n\n      $scope.$on('orderDataLoaded', function (event, data) {\n        $scope.order = data.order;\n      });\n    };\n  }] //End Controller\n}); //End Component\n\n/***/ }),\n\n/***/ 508:\n/*!*****************************************************!*\\\n  !*** ./src/components/booking/booking.component.js ***!\n  \\*****************************************************/\n/*! dynamic exports provided */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar angular = __webpack_require__(/*! angular */ 46);\nvar $ = __webpack_require__(/*! jquery */ 70);\n\nvar moment = __webpack_require__(/*! moment */ 1);\n__webpack_require__(/*! moment-timezone */ 262);\nvar _ = __webpack_require__(/*! underscore */ 52);\n\nvar templateUrl = __webpack_require__(/*! ./booking.component.nghtml */ 509);\n\n//Creating bookingPage component on StickyBooking Module\nangular.module('StickyBooking').component('bookingPage', {\n    templateUrl: templateUrl,\n    controller: ['$scope', '$http', '$filter', '$window', 'occasionSDKService', function BookingController($scope, $http, $filter, $window, occasionSDKService) {\n\n        //Runs On Init\n        this.$onInit = function () {\n            console.log(\"Booking Component Init\");\n            //Call function to load data from SDK Service\n            $scope.displayLoading = true;\n            $scope.initialDataLoaded = false;\n            $scope.calendarDataLoaded = false;\n            $scope.orderLoaded = false;\n            $scope.staticProductID = window.OCCSN.product_id;\n            $scope.orderErrors = null;\n            $scope.activeRedeemable = null;\n            $scope.redeemableError = null;\n            $scope.redeemableStatus = null;\n            $scope.showNav = false;\n            $scope.submitting = false;\n\n            $scope.maxStep = 1;\n            $scope.step = 1;\n\n            angular.element($window).bind('scroll', function () {\n                if (this.pageYOffset > 100) {\n                    $scope.showNav = true;\n\n                    $scope.$apply();\n                }\n            });\n\n            $scope.loadInitialData();\n        };\n\n        // Make initial calls for data and subsequent eager loaded calls\n        $scope.loadInitialData = function () {\n            $scope.merchant = null;\n            $scope.product = null;\n\n            // Initiate several promises at once, wait for all of them to respond before continuing\n            Promise.all([occasionSDKService.getMyMerchant(), occasionSDKService.getProductById($scope.staticProductID)]).then(function (values) {\n                // Populate global variables with returns from promises above\n                var merchant = values[0];\n                var product = values[1];\n\n                $scope.merchant = merchant;\n                $scope.product = product;\n\n                // Set PSP (payment service provider) to merchant's\n                // @example 'cash', 'spreedly', 'square'\n                $scope.psp = merchant.pspName;\n\n                // Set moment.js time zone to merchant's\n                moment.tz.setDefault(merchant.timeZone);\n\n                // Flash an alert to the merchant to add time slots if the product does not a first time slot\n                if (_.isNull(product.firstTimeSlotStartsAt)) {\n                    alert('Listing has no timeslots. If you are the merchant who owns this listing, add time slots ' + 'so that there are times that can be booked.');\n                }\n\n                $scope.$broadcast('initialDataLoaded', { product: product });\n                $scope.$emit('initialDataLoaded', { merchant: merchant, product: product });\n                $scope.initialDataLoaded = true;\n                $scope.displayLoading = false;\n                $scope.$apply();\n\n                // New order for product\n                occasionSDKService.createOrderForProduct(product).then(function (order) {\n                    console.log(\"Order data loaded\");\n                    $scope.order = order;\n                    $scope.orderLoaded = true;\n\n                    $scope.$emit('orderDataLoaded', { order: order });\n                });\n            }).catch(function (errors) {\n                console.log(errors);\n                $scope.displayLoading = false;\n                $scope.$apply();\n\n                if (errors instanceof TypeError) {\n                    alert(\"There was an error retrieving the listing you're looking for. Please try again later.\");\n                } else {\n                    errors.map(function (error) {\n                        alert(error.details);\n                    });\n                }\n            });\n        };\n\n        $scope.$on('calendarDataLoaded', function (event, data) {\n            $scope.calendarDataLoaded = data.calendarDataLoaded;\n            $scope.sessionDuration = data.duration.asHours();\n            if (data.duration.asHours() != 1) {\n                $scope.sessionDuration += ' hours';\n            } else {\n                $scope.sessionDuration += ' hour';\n            }\n        });\n\n        $scope.clickGoToStep = function (step) {\n            if (step <= $scope.maxStep) $scope.goToStep(step);\n        };\n\n        $scope.goToStep = function (step) {\n            $scope.step = step;\n            $scope.scrollToAnchor('step-' + step + '-scroller');\n\n            if (step > $scope.maxStep) $scope.maxStep = step;\n        };\n\n        //When a user clicks get started\n        $scope.getStarted = function () {\n            $scope.displayLoading = true;\n\n            $scope.$watch('calendarDataLoaded', function (calendarDataLoaded) {\n                if (calendarDataLoaded) {\n                    $scope.displayLoading = false;\n\n                    $scope.goToStep(1);\n                }\n            });\n        };\n\n        //When date is selected from calendar\n        $scope.$on('dateSelectedEvent', function (event, data) {\n            $scope.selectedDate = data.selectedDate;\n            $scope.availableSlots = data.availableTimeSlots;\n\n            $scope.goToStep(2);\n        });\n\n        //When loading animation is started from sub component\n        $scope.$on(\"startLoading\", function (event) {\n            $scope.displayLoading = true;\n        });\n\n        //When loading animation is stopped from sub component\n        $scope.$on(\"stopLoading\", function (event) {\n            $scope.displayLoading = false;\n        });\n\n        //When time slot is selected\n        $scope.onTimeSlotSelection = function (event, timeSlot) {\n            event.preventDefault();\n            $scope.selectedTimeSlot = timeSlot;\n\n            $scope.order.timeSlots().assign([$scope.selectedTimeSlot]);\n\n            if ($scope.orderLoaded) {\n                $scope.startOrder();\n            } else {\n                $scope.displayLoading = true;\n                $scope.$watch('orderLoaded', function (newValue) {\n                    if (newValue) {\n                        $scope.displayLoading = false;\n                        $scope.startOrder();\n                    }\n                });\n            }\n        };\n\n        $scope.isActiveTimeSlot = function (timeSlot) {\n            var activeTimeSlot = $scope.order.timeSlots().target().first();\n            if (_.isUndefined(activeTimeSlot)) return false;\n\n            return activeTimeSlot.startsAt.isSame(timeSlot.startsAt);\n        };\n\n        // Returns a number formatted like \"($NN.NN)\"\n        var numToCurrency = function numToCurrency(n) {\n            return $filter('currency')(n, $scope.merchant.currency().code);\n        };\n\n        // Returns the answer on the order for any of the questions the product asks\n        $scope.answerForQuestion = function (question) {\n            return $scope.order.answers().target().detect(function (a) {\n                return a.question() == question;\n            });\n        };\n\n        // Formats the title for checkbox questions, which have following permutations:\n        // formControl == 'checkbox'\n        //   category == 'info': TITLE\n        //   category == 'price'\n        //     operation == 'add': TITLE ($99.99)\n        //     operation == 'multiply': TITLE (99.99% extra)\n        //   category == 'price'\n        //     operation == 'subtract': TITLE ($99.99 off)\n        //     operation == 'divide': TITLE (99.99% off)\n        // formControl == 'waiver': TITLE\n        $scope.titleForCheckbox = function (checkbox) {\n            switch (checkbox.formControl) {\n                case 'checkbox':\n                    switch (checkbox.category) {\n                        case 'price':\n                            switch (checkbox.operation) {\n                                case 'add':\n                                    return checkbox.title + ' (' + numToCurrency(checkbox.price) + ')';\n                                case 'multiply':\n                                    return checkbox.title + ' (' + checkbox.percentage + '% extra)';\n                            }\n                            break;\n                        case 'discount':\n                            switch (checkbox.operation) {\n                                case 'subtract':\n                                    return checkbox.title + ' (' + numToCurrency(checkbox.price) + ' off)';\n                                case 'divide':\n                                    return checkbox.title + ' (' + checkbox.percentage + '% off)';\n                            }\n                            break;\n                        default:\n                            return checkbox.title;\n                    }\n                    break;\n                case 'waiver':\n                    return checkbox.title;\n            }\n        };\n\n        // Formats the title for options of dropdowns/option lists to include price if the option has a price\n        $scope.titleForOption = function (option) {\n            var title = option.title;\n\n            if (option.price) title += ' (' + numToCurrency(option.price) + ')';\n\n            return title;\n        };\n\n        // Formats the title for spin buttons that change based on the value of the spin button\n        $scope.titleForSpinButton = function (answer) {\n            var title = answer.question().title;\n\n            if (answer.question().price) {\n                title += ' ' + answer.value + ' x ' + numToCurrency(answer.question().price) + ' = ';\n                title += numToCurrency(parseFloat(answer.question().price) * answer.value);\n            }\n\n            if (answer.question().max) {\n                title += ' (Max of ' + answer.question().max + ')';\n            }\n\n            return title;\n        };\n\n        // Returns the default option from a question's options\n        $scope.defaultOptionFor = function (question) {\n            return question.options().target().detect(function (o) {\n                return o.default;\n            });\n        };\n\n        //When the value of a drop down selector or radio selector changes\n        $scope.optionableQuestionChanged = function (answer, option) {\n            answer.assignOption(option);\n            $scope.answerChanged(answer);\n        };\n\n        // Update price on answer change if price calculating question\n        //   On init\n        //   When a question value changes\n        $scope.answerChanged = function (answer) {\n            if (answer.question().priceCalculating) {\n                $scope.order.calculatePrice().then(function (order) {\n                    console.log(\"Order after calc\", $scope.order.attributes());\n                    $scope.$apply();\n                }).catch(function (error) {\n                    console.log(\"Error with recalc\", error);\n                });\n            }\n        };\n\n        // Indicates whether or not the order has a subtotal, meaning the price and redeemable sections are necessary\n        $scope.hasSubtotal = function () {\n            return !$scope.product.free && parseFloat($scope.order.subtotal) > 0;\n        };\n\n        // Indicates whether or not the order requires payment, meaning the payment section is necessary\n        $scope.requiresPayment = function () {\n            return $scope.hasSubtotal() && parseFloat($scope.order.outstandingBalance) > 0;\n        };\n\n        //When Order and Answers must be configured\n        $scope.startOrder = function () {\n            $scope.optionsHolder = {};\n\n            $scope.goToStep(3);\n\n            //Calculate starting price\n            $scope.order.calculatePrice().then(function (order) {\n                console.log(\"Order after first calc\", $scope.order.attributes());\n\n                if ($scope.psp == \"spreedly\") {\n                    console.log(\"Use Spreedly\");\n                    $scope.useSpreedly();\n                }\n\n                if ($scope.psp == \"square\") {\n                    console.log(\"Use Square\");\n                    $scope.useSquare();\n                }\n\n                $scope.$apply();\n            }).catch(function (error) {\n                console.log(\"Error from calc start price\", error);\n            });\n        };\n\n        $scope.useSquare = function () {\n            // Create and initialize a payment form object\n            $scope.paymentForm = new SqPaymentForm({\n\n                // Initialize the payment form elements\n                applicationId: window.OCCSN.square_key,\n                inputClass: 'form-control',\n\n                // Customize the CSS for SqPaymentForm iframe elements\n                inputStyles: [{\n                    fontSize: '19px'\n                }],\n\n                // Initialize the credit card placeholders\n                cardNumber: {\n                    elementId: 'sq-card-number',\n                    placeholder: '•••• •••• •••• ••••'\n                },\n                cvv: {\n                    elementId: 'sq-cvv',\n                    placeholder: 'CVV'\n                },\n                expirationDate: {\n                    elementId: 'sq-expiration-date',\n                    placeholder: 'MM/YY'\n                },\n                postalCode: {\n                    elementId: 'sq-postal-code',\n                    placeholder: '#####'\n                },\n\n                // SqPaymentForm callback functions\n                callbacks: {\n                    methodsSupported: function methodsSupported(methods) {\n                        var applePayBtn = document.getElementById('sq-apple-pay');\n                        var applePayLabel = document.getElementById('sq-apple-pay-label');\n                        var masterpassBtn = document.getElementById('sq-masterpass');\n                        var masterpassLabel = document.getElementById('sq-masterpass-label');\n\n                        applePayBtn.style.display = 'none';\n                        applePayLabel.style.display = 'none';\n                        masterpassBtn.style.display = 'none';\n                        masterpassLabel.style.display = 'none';\n                        // Only show the button if Apple Pay for Web is enabled\n                        // Otherwise, display the wallet not enabled message.\n                        /*if (methods.applePay === true) {\n                            applePayBtn.style.display = 'inline-block';\n                            applePayLabel.style.display = 'none' ;\n                        }\n                        // Only show the button if Masterpass is enabled\n                        // Otherwise, display the wallet not enabled message.\n                        if (methods.masterpass === true) {\n                            masterpassBtn.style.display = 'inline-block';\n                            masterpassLabel.style.display = 'none';\n                        }*/\n                    },\n                    cardNonceResponseReceived: function cardNonceResponseReceived(errors, nonce, cardData) {\n                        if (errors) {\n                            //Fill orderErrors array which displays under credit card form\n                            $scope.orderErrors = errors;\n                            $scope.submitting = false;\n                            $scope.$apply();\n\n                            //Log full errors for console\n                            console.log(\"Encountered errors:\");\n                            errors.forEach(function (error) {\n                                console.log(error);\n                            });\n                        } else {\n                            $scope.creditCard = occasionSDKService.buildCard(nonce);\n                            console.log(\"CARD\", $scope.creditCard);\n                            $scope.order.charge($scope.creditCard, $scope.order.outstandingBalance);\n\n                            $scope.order.calculatePrice().then(function (order) {\n                                $scope.submitOrder();\n                            }).catch(function (error) {\n                                console.log(\"Errors with final calc price\", error);\n                            });\n                        }\n                    },\n                    unsupportedBrowserDetected: function unsupportedBrowserDetected() {},\n                    inputEventReceived: function inputEventReceived(inputEvent) {\n                        switch (inputEvent.eventType) {\n                            case 'focusClassAdded':\n                                /* HANDLE AS DESIRED */\n                                break;\n                            case 'focusClassRemoved':\n                                /* HANDLE AS DESIRED */\n                                break;\n                            case 'errorClassAdded':\n                                /* HANDLE AS DESIRED */\n                                console.log(\"Error class added\");\n                                break;\n                            case 'errorClassRemoved':\n                                /* HANDLE AS DESIRED */\n                                console.log(\"Error class removed\");\n                                break;\n                            case 'cardBrandChanged':\n                                /* HANDLE AS DESIRED */\n                                break;\n                            case 'postalCodeChanged':\n                                /* HANDLE AS DESIRED */\n                                break;\n                        }\n                    },\n                    paymentFormLoaded: function paymentFormLoaded() {\n                        console.log(\"Form loaded\");\n                    }\n                }\n            });\n            $scope.paymentForm.build();\n        };\n\n        $scope.useSpreedly = function () {\n            //Init Spreedly card values\n            Spreedly.init(window.OCCSN.spreedly_key, {\n                \"numberEl\": \"spreedly-number\",\n                \"cvvEl\": \"spreedly-cvv\"\n            });\n\n            Spreedly.on(\"ready\", function () {\n                Spreedly.setFieldType(\"number\", \"text\");\n                Spreedly.setNumberFormat(\"prettyFormat\");\n                Spreedly.setPlaceholder(\"number\", \"Card Number\");\n                Spreedly.setPlaceholder(\"cvv\", \"CVV\");\n                Spreedly.setStyle(\"number\", 'display: block; width: 95%; height: 36px; padding: 6px 12px; font-size: 16px; line-height: 1.428571429; color: #7b829a; background-color: #fff; background-image: none; border: 1px solid #ccc; -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075); box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075); -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s; -o-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s; transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;');\n                Spreedly.setStyle(\"cvv\", 'display: block; width: 60px; height: 36px; padding: 6px 12px; font-size: 16px; line-height: 1.428571429; color: #7b829a; background-color: #fff; background-image: none; border: 1px solid #ccc; -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075); box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075); -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s; -o-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s; transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;');\n            });\n\n            Spreedly.on('fieldEvent', function (name, type, activeEl, inputProperties) {\n                if (type == 'focus') {\n                    Spreedly.setStyle(name, 'border-color: #66afe9; outline: 0; -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(102, 175, 233, 0.6); box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(102, 175, 233, 0.6)');\n                }\n                if (type == 'blur') {\n                    Spreedly.setStyle(name, 'border: 1px solid #ccc; -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075); box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075); -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s; -o-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s; transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;');\n                }\n            });\n\n            Spreedly.on('errors', function (errors) {\n                console.log(\"Spreedly On Errors\", errors);\n                $scope.orderErrors = errors;\n                $scope.submitting = false;\n                $scope.$apply();\n            });\n\n            Spreedly.on('paymentMethod', function (token, pmData) {\n                $scope.creditCard = occasionSDKService.buildCard(token);\n                $scope.order.charge($scope.creditCard, $scope.order.outstandingBalance);\n\n                $scope.order.calculatePrice().then(function (order) {\n                    $scope.submitOrder();\n                }).catch(function (error) {\n                    console.log(\"Errors with final calc price\", error);\n                });\n            });\n        };\n\n        $scope.checkRedeemable = function () {\n            $scope.displayLoading = true;\n\n            $scope.redeemableError = null;\n            $scope.activeRedeemable = null;\n            var code = document.getElementById('redeemableInput').value;\n\n            $scope.product.redeemables().findBy({ code: code }).then(function (redeemable) {\n                console.log(\"Redeemable\", redeemable);\n                var type = occasionSDKService.redeemableType(redeemable);\n                $scope.activeRedeemable = redeemable;\n                console.log(\"Attr\", $scope.activeRedeemable.attributes());\n\n                $scope.displayLoading = false;\n                document.getElementById('redeemableInput').disabled = true;\n\n                // Apply charge or discount\n                switch (type) {\n                    case 'card':\n                        var value = parseFloat($scope.activeRedeemable.value);\n                        var balance = parseFloat($scope.order.outstandingBalance);\n                        if (value > balance) value = balance;\n\n                        $scope.order.charge($scope.activeRedeemable, value);\n                        $scope.redeemableStatus = 'Gift Card Applied! - ' + $scope.merchant.currency().code + value + ' Applied';\n                        break;\n                    case 'coupon':\n                        $scope.order.assignCoupon($scope.activeRedeemable);\n                        if ($scope.activeRedeemable.attributes().discountFixed != null) $scope.redeemableStatus = 'Coupon Applied! - ' + $scope.merchant.currency().code + $scope.activeRedeemable.discountFixed + ' Off';\n                        if ($scope.activeRedeemable.attributes().discountPercentage != null) $scope.redeemableStatus = 'Coupon Applied! - ' + $scope.activeRedeemable.attributes().discountPercentage + '% Off';\n                        break;\n                }\n\n                //Recalc price\n                $scope.order.calculatePrice().then(function (order) {\n                    console.log(\"Order after calc after redeem\", order);\n                    $scope.$apply();\n                }).catch(function (error) {\n                    console.log(\"Error after calc after redeem\", error);\n                });\n            }).catch(function (errors) {\n                $scope.displayLoading = false;\n                errors.map(function (error) {\n                    $scope.redeemableStatus = null;\n                    $scope.redeemableError = error.details;\n                });\n                document.getElementById('redeemableInput').value = null;\n                $scope.$apply();\n            });\n        };\n\n        $scope.removeRedeemable = function () {\n            $scope.displayLoading = true;\n\n            switch (occasionSDKService.redeemableType($scope.activeRedeemable)) {\n                case 'card':\n                    $scope.order.removeCharge($scope.activeRedeemable);\n                    break;\n                case 'coupon':\n                    $scope.order.assignCoupon(null);\n                    break;\n            }\n            $scope.activeRedeemable = null;\n            $scope.redeemableStatus = null;\n            $scope.redeemableError = null;\n            document.getElementById('redeemableInput').value = null;\n            document.getElementById('redeemableInput').disabled = false;\n\n            //Recalc price\n            $scope.order.calculatePrice().then(function (order) {\n                console.log(\"Order after calc after remove redeem\", order);\n                $scope.displayLoading = false;\n                $scope.$apply();\n            }).catch(function (error) {\n                console.log(\"Error after calc after remove redeem\", error);\n                $scope.displayLoading = false;\n            });\n        };\n\n        $scope.submitPaymentForms = function () {\n            $scope.submitting = true;\n            $scope.orderErrors = null;\n\n            if (!$scope.requiresPayment()) {\n                $scope.submitOrder();\n            } else {\n                switch ($scope.psp) {\n                    case 'cash':\n                        $scope.submitOrder();\n                        break;\n                    case 'square':\n                        $scope.submitSquareForm();\n                        break;\n                    case 'spreedly':\n                        $scope.submitSpreedlyForm();\n                        break;\n                }\n            }\n        };\n\n        $scope.submitSquareForm = function () {\n            $scope.paymentForm.requestCardNonce();\n        };\n\n        $scope.submitSpreedlyForm = function () {\n            console.log(\"Submit payment form\");\n            var requiredFields = {};\n\n            // Get required, non-sensitive, values from host page\n            requiredFields[\"full_name\"] = document.getElementById(\"full_name\").value;\n            requiredFields[\"month\"] = document.getElementById(\"month\").value;\n            requiredFields[\"year\"] = document.getElementById(\"year\").value;\n\n            Spreedly.tokenizeCreditCard(requiredFields);\n        };\n\n        //When users submits order form\n        $scope.submitOrder = function () {\n            $scope.order.save(function () {\n                $scope.submitting = false;\n\n                if ($scope.order.persisted()) {\n                    $scope.$emit('orderDataLoaded', { order: $scope.order });\n                } else {\n                    $scope.orderErrors = $scope.order.errors().toArray();\n                    $scope.order.removeCharge($scope.creditCard);\n                }\n                $scope.$apply();\n            });\n        };\n\n        //Scroll to specified anchor tag\n        $scope.scrollToAnchor = function (aid) {\n            var aTag = $(\"a[name='\" + aid + \"']\");\n            $('html, body').animate({ scrollTop: aTag.offset().top }, 'slow');\n        };\n\n        //Return a readable time portion of a date\n        $scope.formatToTime = function (dateString) {\n            return moment(dateString).format('LT');\n        };\n\n        //Return a readable date portion of a date\n        $scope.formatToDate = function (dateString) {\n            return moment(dateString).format('MMMM DD, YYYY');\n        };\n\n        //Return a readable full datetime\n        $scope.formatToFullDatetime = function (dateString) {\n            return moment(dateString).format('dddd MMMM Do, YYYY h:mm A');\n        };\n\n        //Determine which time of day section this timeSlot belongs in\n        $scope.splitByTimeOfDay = function (timeSlot, time) {\n            switch (time) {\n                case 'morning':\n                    return timeSlot.startsAt.hour() < 12;\n                case 'afternoon':\n                    return timeSlot.startsAt.hour() >= 12 && timeSlot.startsAt.hour() < 18;\n                case 'evening':\n                    return timeSlot.startsAt.hour() >= 18;\n            }\n        };\n    }] //End Controller\n}); //End Component\n\n/***/ }),\n\n/***/ 509:\n/*!*********************************************************!*\\\n  !*** ./src/components/booking/booking.component.nghtml ***!\n  \\*********************************************************/\n/*! dynamic exports provided */\n/*! all exports used */\n/***/ (function(module, exports) {\n\nvar path = '/Users/nicklandgrebe/dev/StickyBooking/src/components/booking/booking.component.nghtml';\nvar html = \"<main class=\\\"booking-page-container\\\">\\n\\n    <div class=\\\"loadingAnimation\\\" ng-if=\\\"displayLoading\\\">\\n        <span us-spinner=\\\"{ color: '#fff' }\\\"></span>\\n    </div>\\n\\n    <div class=\\\"booking-sidebar\\\" ng-if=\\\"initialDataLoaded\\\" ng-class='{ \\\"booking-sidebar-hidden\\\": !showNav && step == 0 }'>\\n        <div ng-if=\\\"product.status == 'active'\\\">\\n            <ol class=\\\"booking-process\\\" id=\\\"booking-process-status\\\">\\n                <li class=\\\"booking-step\\\" ng-class='{ \\\"booking-step-active\\\": step == 1, \\\"booking-step-complete\\\": step > 1, \\\"booking-step-disabled\\\": maxStep < 1 }'>\\n                  <a href ng-click='clickGoToStep(1)'>Select a Date</a>\\n                </li>\\n                <li class=\\\"booking-step\\\" ng-class='{ \\\"booking-step-active\\\": step == 2, \\\"booking-step-complete\\\": step > 2, \\\"booking-step-disabled\\\": maxStep < 2 }'>\\n                  <a href ng-click='clickGoToStep(2)'>Select a Time</a>\\n                </li>\\n                <li class=\\\"booking-step\\\" ng-class='{ \\\"booking-step-active\\\": step == 3, \\\"booking-step-complete\\\": step > 3, \\\"booking-step-disabled\\\": maxStep < 3 }'>\\n                  <a href ng-click='clickGoToStep(3)'>Your Information</a>\\n                </li>\\n            </ol>\\n        </div>\\n    </div>\\n  \\n    <div class=\\\"booking-content\\\">\\n        <div class=\\\"booking-page-intro\\\">\\n          <h2 class=\\\"booking-page-photographer-name\\\">{{ merchant.name }}</h2>\\n          <div ng-if=\\\"product.status == 'active'\\\">\\n              <div class=\\\"booking-page-welcome-message\\\">\\n                <ng-bind-html ng-bind-html=\\\"product.description\\\"></ng-bind-html>\\n              </div>\\n          </div>\\n          <div ng-if=\\\"product.status != 'active'\\\">\\n              <div class=\\\"booking-page-welcome-message animated slideInLeft\\\">\\n                  <p ng-if=\\\"product.status == 'expired'\\\">\\n                      The last time slot of this product has expired, so no bookings are\\n                      currently accepted. Please contact the merchant if you think this is in error.\\n                  </p>\\n                  <p ng-if=\\\"product.status == 'inactive'\\\">\\n                      This listing is no longer available for sale. Please contact the\\n                      merchant if you think this is may be an error.\\n                  </p>\\n                  <p ng-if=\\\"product.status == 'sold_out'\\\">This listing has sold out.</p>\\n              </div>\\n          </div>\\n        </div>\\n\\n        <!--Get Started section -->\\n        <div class=\\\"booking-page-hero\\\" style=\\\"background-image: url('{{ product.image.url }}');\\\">\\n            <div class=\\\"booking-page-hero-content animated slideInRight\\\" ng-if=\\\"initialDataLoaded\\\">\\n                <h6 class=\\\"get-started-title\\\">Get Started</h6>\\n                <h1 class=\\\"page-title\\\">{{ product.title }}</h1>\\n                <h6 ng-if='sessionDuration' class=\\\"session-length\\\">\\n                  Session Length: {{ sessionDuration }}\\n                </h6>\\n\\n                <button class=\\\"get-started tada infinite\\\"\\n                        ng-click=\\\"getStarted()\\\"\\n                        ng-class=\\\"{ animated: product.status == 'active' }\\\"\\n                        ng-disabled=\\\"product.status != 'active'\\\">\\n\\n                    <svg viewBox=\\\"686 482 141 141\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n                        <path d=\\\"M826.958984,552.5 C826.958984,513.586577 795.413423,482.041016 756.5,482.041016 C717.586577,482.041016 686.041016,513.586577 686.041016,552.5 C686.041016,591.413423 717.586577,622.958984 756.5,622.958984 C795.413423,622.958984 826.958984,591.413423 826.958984,552.5 Z M693.041016,552.5 C693.041016,517.452571 721.452571,489.041016 756.5,489.041016 C791.547429,489.041016 819.958984,517.452571 819.958984,552.5 C819.958984,587.547429 791.547429,615.958984 756.5,615.958984 C721.452571,615.958984 693.041016,587.547429 693.041016,552.5 Z M761.386839,585.043454 L789.042157,557.388135 C791.742872,554.688285 791.742872,550.310967 789.042157,547.611116 C786.346196,544.910834 781.964124,544.910834 779.268163,547.611116 L763.413455,563.463663 L763.413455,524.844307 C763.413455,521.025713 760.319517,517.930478 756.499626,517.930478 C752.680167,517.930478 749.585796,521.025713 749.585796,524.844307 L749.585796,563.463663 L733.731521,547.611116 C731.035127,544.910834 726.653488,544.910834 723.957094,547.611116 C722.604576,548.961041 721.930478,550.730118 721.930478,552.499626 C721.930478,554.269134 722.604576,556.03821 723.957094,557.388135 L751.612412,585.043454 C754.308806,587.743736 758.690878,587.743736 761.386839,585.043454 Z\\\"\\n                          stroke=\\\"none\\\" fill=\\\"#FFFFFF\\\" fill-rule=\\\"evenodd\\\"></path>\\n                    </svg>\\n                </button>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"panes\\\">\\n            <!-- Calendar pane -->\\n            <a name=\\\"step-1-scroller\\\"></a>\\n            <div class=\\\"pane pane-calendar pane-active\\\" id=\\\"step-2\\\" ng-show='maxStep > 0'>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                        <h6>Availability</h6>\\n                        <h3>Select a date on the calendar below to view availability:</h3>\\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"session-duration text-right\\\">\\n                            <h4 class=\\\"duration-count\\\">{{ sessionDuration }}</h4>\\n                            <h6>Session Duration</h6>\\n                        </div>\\n                    </div>\\n                </div>\\n                <hr />\\n\\n                <booking-calendar></booking-calendar>\\n            </div>\\n\\n            <!-- available times-->\\n            <a name=\\\"step-2-scroller\\\"></a>\\n            <div class=\\\"pane pane-available-times clearfix\\\" ng-show='maxStep > 1'>\\n                <div class=\\\"col-md-12\\\">\\n                    <h6>Available Time Slots</h6>\\n                    <h3>Select a time slot on {{ formatToDate(selectedDate) }} to continue booking:</h3>\\n                    <hr />\\n                </div>\\n                <div class=\\\"col-md-4 time-slot-buttons\\\">\\n                    <h6>Morning</h6>\\n                    <button class=\\\"btn btn-primary time-slot\\\"\\n                            ng-repeat=\\\"timeSlot in availableSlots.toArray()\\\"\\n                            ng-if=\\\"splitByTimeOfDay(timeSlot, 'morning')\\\"\\n                            ng-click=\\\"onTimeSlotSelection($event, timeSlot)\\\"\\n                            ng-class='{ \\\"time-slot-active\\\": isActiveTimeSlot(timeSlot) }'>\\n\\n                        {{ formatToTime(timeSlot.startsAt) }}\\n                    </button>\\n                </div>\\n                <div class=\\\"col-md-4 time-slot-buttons\\\">\\n                    <h6>Afternoon</h6>\\n                    <button class=\\\"btn btn-primary time-slot\\\"\\n                            ng-repeat=\\\"timeSlot in availableSlots.toArray()\\\"\\n                            ng-if=\\\"splitByTimeOfDay(timeSlot, 'afternoon')\\\"\\n                            ng-click=\\\"onTimeSlotSelection($event, timeSlot)\\\"\\n                            ng-class='{ \\\"time-slot-active\\\": isActiveTimeSlot(timeSlot) }'>\\n\\n                        {{ formatToTime(timeSlot.startsAt) }}\\n                    </button>\\n                </div>\\n                <div class=\\\"col-md-4 time-slot-buttons\\\">\\n                    <h6>Evening</h6>\\n                    <button class=\\\"btn btn-primary time-slot\\\"\\n                            ng-repeat=\\\"timeSlot in availableSlots.toArray()\\\"\\n                            ng-if=\\\"splitByTimeOfDay(timeSlot, 'evening')\\\"\\n                            ng-click=\\\"onTimeSlotSelection($event, timeSlot)\\\"\\n                            ng-class='{ \\\"time-slot-active\\\": isActiveTimeSlot(timeSlot) }'>\\n\\n                        {{ formatToTime(timeSlot.startsAt) }}\\n                    </button>\\n                </div>\\n            </div>\\n\\n            <!--Customer information pane -->\\n            <a name=\\\"step-3-scroller\\\"></a>\\n            <div class=\\\"pane pane-customer-information\\\" ng-show='maxStep > 2'>\\n                <h6>Your Info</h6>\\n                <h3>We need to collect some information from you to confirm booking:</h3>\\n                <hr />\\n\\n                <!-- Question Form -->\\n                <form id=\\\"questionForm\\\" ng-submit=\\\"submitPaymentForms()\\\">\\n                    <!-- Static Questions, Always Required -->\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"control-label\\\" for=\\\"order_customer_email\\\">First Name*</label>\\n                        <input id=\\\"lastName\\\" placeholder=\\\"First Name\\\" required=\\\"required\\\" type=\\\"text\\\" ng-model=\\\"order.customer().firstName\\\" name=\\\"firstName\\\"\\n                            class=\\\"form-control\\\" autofocus><span class=\\\"message\\\"></span>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"control-label\\\" for=\\\"order_customer_email\\\">Last Name*</label>\\n                        <input id=\\\"firstName\\\" placeholder=\\\"Last Name\\\" required=\\\"required\\\" type=\\\"text\\\" ng-model=\\\"order.customer().lastName\\\" name=\\\"lastName\\\"\\n                            class=\\\"form-control\\\"><span class=\\\"message\\\"></span>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"control-label\\\" for=\\\"order_customer_email\\\">E-mail Address*</label>\\n                        <input id=\\\"email\\\" placeholder=\\\"E-mail\\\" required=\\\"required\\\" type=\\\"email\\\" ng-model=\\\"order.customer().email\\\" name=\\\"email\\\" class=\\\"form-control\\\">\\n                        <span class=\\\"message\\\"></span>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"control-label\\\" for=\\\"order_customer_email\\\">Zip Code*</label>\\n                        <input id=\\\"zip\\\" placeholder=\\\"Zip Code\\\" required=\\\"required\\\" type=\\\"text\\\" ng-model=\\\"order.customer().zip\\\" name=\\\"zip\\\" class=\\\"form-control\\\">\\n                        <span class=\\\"message\\\"></span>\\n                    </div>\\n                    <!-- End of Static Questions -->\\n\\n                    <!-- Dynamic Questions, Set by Merchant -->\\n                    <div ng-repeat=\\\"(index, question) in product.questions().toArray()\\\" ng-init=\\\"answer = answerForQuestion(question)\\\">\\n                        <div class=\\\"form-group\\\" ng-if=\\\"question.formControl != 'separator'\\\">\\n                            <label ng-if=\\\"question.formControl == 'text_input' || question.formControl == 'text_area' || question.formControl == 'option_list' || question.formControl == 'drop_down'\\\">\\n                                {{ question.title }}<span ng-if='question.required'>*</span>\\n                            </label>\\n                            <!-- Render different from control based on answer.question.formControl type -->\\n                            <!-- Text Input -->\\n                            <input class=\\\"form-control\\\"\\n                                   ng-if=\\\"question.formControl == 'text_input'\\\"\\n                                   ng-model=\\\"answer.value\\\"\\n                                   ng-required=\\\"question.required\\\"\\n                                   placeholder=\\\"{{ question.title }}\\\"\\n                            />\\n                            <!-- Text Area -->\\n                            <textarea class=\\\"form-control\\\" rows=\\\"4\\\"\\n                                      ng-if=\\\"question.formControl == 'text_area'\\\"\\n                                      ng-model=\\\"answer.value\\\"\\n                                      ng-required=\\\"question.required\\\"\\n                                      placeholder=\\\"Your Response\\\">\\n                            </textarea>\\n                            <!-- Option List -->\\n                            <div ng-if=\\\"question.formControl == 'option_list'\\\">\\n                                <span class=\\\"invisible\\\"\\n                                      ng-init=\\\"optionsHolder[question.id] = defaultOptionFor(question); optionableQuestionChanged(answer, optionsHolder[question.id])\\\">\\n                                </span>\\n                                <div class=\\\"radio\\\" ng-repeat=\\\"option in question.options().target().toArray()\\\">\\n                                  <label>\\n                                    <input type=\\\"radio\\\"\\n                                           name=\\\"{{question.id}}\\\"\\n                                           ng-value=\\\"option\\\"\\n                                           ng-model=\\\"optionsHolder[question.id]\\\"\\n                                           ng-change=\\\"optionableQuestionChanged(answer, optionsHolder[question.id])\\\" />\\n\\n                                    {{ titleForOption(option) }}\\n                                  </label>\\n                                </div>\\n                            </div>\\n                            <!-- Drop Down -->\\n                            <select class=\\\"form-control\\\"\\n                                    ng-if=\\\"question.formControl == 'drop_down'\\\"\\n                                    ng-model=\\\"optionsHolder[question.id]\\\"\\n                                    ng-change=\\\"optionableQuestionChanged(answer, optionsHolder[question.id])\\\"\\n                                    ng-options=\\\"option as titleForOption(option) for option in question.options().target().toArray()\\\"\\n                                    ng-init=\\\"optionsHolder[question.id] = defaultOptionFor(question); optionableQuestionChanged(answer, optionsHolder[question.id])\\\">\\n\\n                                <option value=\\\"\\\">-- Please select --</option>\\n                            </select>\\n                            <!-- Spin Button -->\\n                            <div ng-if=\\\"question.formControl == 'spin_button'\\\">\\n                                <label>\\n                                    <span>{{ titleForSpinButton(answer) }}</span>\\n                                    <span ng-if='question.required'>*</span>\\n                                </label>\\n                                <ul class=\\\"spinner-input list-inline\\\">\\n                                    <li>\\n                                        <input class=\\\"form-control value-input\\\" readonly=\\\"\\\"\\n                                               ng-model=\\\"answer.value\\\"\\n                                               ng-init=\\\"answer.value = question.min\\\" />\\n                                    </li>\\n                                    <li>\\n                                        <div class=\\\"btn-group btn-group-lg\\\">\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-info update-price stepper-minus\\\"\\n                                                    ng-click=\\\"answer.value = answer.value - 1; answerChanged(answer)\\\"\\n                                                    ng-disabled=\\\"answer.value == question.min\\\">\\n                                                -\\n                                            </button>\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-info update-price stepper-plus\\\"\\n                                                    ng-click=\\\"answer.value = answer.value + 1; answerChanged(answer)\\\"\\n                                                    ng-disabled=\\\"answer.value >= question.max\\\">\\n                                                +\\n                                            </button>\\n                                        </div>\\n                                    </li>\\n                                </ul>\\n                            </div>\\n                            <!-- Checkbox && Waiver -->\\n                            <div ng-if=\\\"question.formControl == 'checkbox' || question.formControl == 'waiver'\\\">\\n                                <div class=\\\"well well-sm waiver\\\" ng-if=\\\"question.formControl == 'waiver'\\\">\\n                                    <ng-bind-html ng-bind-html=\\\"question.waiverText\\\">\\n                                    </ng-bind-html>\\n                                </div>\\n\\n                                <div class=\\\"checkbox\\\">\\n                                    <label>\\n                                        <input type=\\\"checkbox\\\"\\n                                               ng-model=\\\"answer.value\\\"\\n                                               ng-change=\\\"answerChanged(answer)\\\"\\n                                               ng-required=\\\"question.required || question.formControl == 'waiver'\\\"\\n                                               ng-init=\\\"answer.value = false\\\" />\\n\\n                                        <span>{{ titleForCheckbox(question) }}</span>\\n                                        <span ng-if=\\\"question.required || question.formControl == 'waiver'\\\">*</span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <!-- Text Output -->\\n                            <h3 class=\\\"question-text-output\\\" ng-if=\\\"question.formControl == 'text_output' && question.displayAsTitle\\\">{{ question.title }}</h3>\\n                            <p  class=\\\"question-text-output\\\" ng-if=\\\"question.formControl == 'text_output' && !question.displayAsTitle\\\">{{ question.title }}</p>\\n                        </div>\\n                        <hr ng-if=\\\"question.formControl == 'separator'\\\">\\n                    </div>\\n                    <!-- End of Dynamic Questions -->\\n\\n                    <!-- Price Table -->\\n                    <div class=\\\"alert priceTable\\\" ng-if='hasSubtotal()' ng-class=\\\"{ 'alert-warning': psp == 'cash', 'alert-success': psp != 'cash' }\\\">\\n                        <div ng-if=\\\"psp == 'cash'\\\">\\n                            <strong>No payment required now. Payment will be collected at the venue.</strong>\\n                            <br><br>\\n                        </div>\\n                        <table>\\n                            <tr ng-if=\\\"order.subtotal != order.total\\\">\\n                                <td>Subtotal:</td>\\n                                <td>{{ order.subtotal | currency:merchant.currency().code }}</td>\\n                            </tr>\\n                            <tr ng-if=\\\"order.tax != 0 && order.tax != null\\\">\\n                                <td>Tax:</td>\\n                                <td>{{ order.tax | currency:merchant.currency().code }}</td>\\n                            </tr>\\n                            <tr ng-if=\\\"order.couponAmount != null\\\">\\n                                <td>Discount:</td>\\n                                <td>-{{ order.couponAmount | currency:merchant.currency().code }}</td>\\n                            </tr>\\n                            <tr ng-class=\\\"{ 'borderTop': order.subtotal != order.total }\\\">\\n                                <td><strong>Total:</strong></td>\\n                                <td>{{ order.total | currency:merchant.currency().code }}</td>\\n                            </tr>\\n                            <tr ng-if=\\\"order.outstandingBalance != order.total\\\">\\n                                <td>Balance due:</td>\\n                                <td>{{ order.outstandingBalance | currency:merchant.currency().code }}</td>\\n                            </tr>\\n                        </table>\\n                    </div>\\n                    <!-- End Price Table -->\\n                    <!-- Redeemables Section -->\\n                    <div id=\\\"redeemables\\\" ng-if=\\\"product.hasRedeemables && hasSubtotal()\\\">\\n                        <br><br>\\n                        <h3>Gift Cards & Coupons</h3>\\n                        <hr>\\n\\n                        <div class=\\\"form-group hasButton\\\">\\n                            <input type=\\\"text\\\" id=\\\"redeemableInput\\\" name=\\\"redeemableInput\\\" class=\\\"form-control\\\" placeholder=\\\"Gift Card Number or Coupon Code\\\" ng-model=\\\"redeemableInput\\\" />\\n                            <input type=\\\"button\\\" class=\\\"btn-primary btn\\\" ng-if=\\\"activeRedeemable == null\\\" value=\\\"Apply\\\" ng-click=\\\"checkRedeemable()\\\" />\\n                            <input type=\\\"button\\\" class=\\\"btn-danger btn\\\" ng-if=\\\"activeRedeemable != null\\\" value=\\\"Remove\\\" ng-click=\\\"removeRedeemable()\\\" />\\n                        </div>\\n                        <p class=\\\"appliedStatus\\\" ng-if=\\\"redeemableStatus != null\\\">{{ redeemableStatus }}</p>\\n                        <p class=\\\"appliedError\\\" ng-if=\\\"redeemableError != null\\\">{{ redeemableError }}</p>\\n                    </div>\\n                    <!-- End Redeemables Section -->\\n\\n                    <!-- Checkout Forms -->\\n                    <div ng-show='requiresPayment()'>\\n\\n                        <!-- Spreedly Checkout Form -->\\n                        <div id=\\\"payment-form\\\" class=\\\"ccForm\\\" ng-if=\\\"psp == 'spreedly'\\\">\\n                            <h3>Pay with Card</h3>\\n                            <hr>\\n\\n                            <input type=\\\"hidden\\\" name=\\\"payment_method_token\\\" id=\\\"payment_method_token\\\">\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"control-label\\\" for=\\\"full_name\\\">Name On Card</label>\\n                                <input type=\\\"text\\\" id=\\\"full_name\\\" name=\\\"full_name\\\" class=\\\"form-control\\\" placeholder=\\\"Name On Card\\\">\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"control-label\\\">Credit Card Number</label>\\n                                <div id=\\\"spreedly-number\\\" class=\\\"spreedly-input\\\"></div>\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"control-label\\\" for=\\\"spreedly-exp-month\\\">Expiration Date</label>\\n                                <input type=\\\"text\\\" id=\\\"month\\\" name=\\\"month\\\" maxlength=\\\"2\\\" class=\\\"form-control\\\" placeholder=\\\"MM\\\">\\n                                <input type=\\\"text\\\" id=\\\"year\\\" name=\\\"year\\\" maxlength=\\\"4\\\" class=\\\"form-control\\\" placeholder=\\\"YYYY\\\">\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"control-label\\\">CVV</label>\\n                                <div id=\\\"spreedly-cvv\\\" class=\\\"spreedly-input\\\"></div>\\n                            </div>\\n                        </div>\\n                        <!-- End Spreedly Checkout Form -->\\n\\n                        <!-- Square Checkout Form -->\\n                        <div id=\\\"sq-ccbox\\\" ng-if=\\\"psp == 'square'\\\">\\n                            <h3>Pay with Card</h3>\\n                            <hr>\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"control-label\\\">Card Number:</label>\\n                                <div id=\\\"sq-card-number\\\"></div>\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"control-label\\\">CVV:</label>\\n                                <div id=\\\"sq-cvv\\\"></div>\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"control-label\\\">Expiration Date:</label>\\n                                <div id=\\\"sq-expiration-date\\\"></div>\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"control-label\\\">Postal Code:</label>\\n                                <div id=\\\"sq-postal-code\\\"></div>\\n                            </div>\\n\\n                            <input type=\\\"hidden\\\" id=\\\"card-nonce\\\" name=\\\"nonce\\\">\\n                        </div>\\n                        <div id=\\\"sq-walletbox\\\" ng-if=\\\"psp == 'square'\\\">\\n                            <div id=\\\"sq-apple-pay-label\\\" class=\\\"wallet-not-enabled\\\">Apple Pay for Web not enabled</div>\\n                            <!-- Placholder for Apple Pay for Web button -->\\n                            <button id=\\\"sq-apple-pay\\\" class=\\\"button-apple-pay\\\"></button>\\n\\n                            <div id=\\\"sq-masterpass-label\\\" class=\\\"wallet-not-enabled\\\">Masterpass not enabled</div>\\n                            <!-- Placholder for Masterpass button -->\\n                            <button id=\\\"sq-masterpass\\\" class=\\\"button-masterpass\\\"></button>\\n                        </div>\\n                        <!-- End Square Checkout Form -->\\n                    </div>\\n                    <!-- End Checkout Forms -->\\n\\n                    <!-- Errors Section -->\\n                    <div class=\\\"alert alert-danger\\\" ng-if=\\\"orderErrors != null && orderErrors.length > 0\\\">\\n                        <h4>There were issues with your order:</h4>\\n                        <ul>\\n                            <li ng-repeat=\\\"(errorIndex, errorValue) in orderErrors\\\">{{ errorValue.message }}</li>\\n                        </ul>\\n                    </div>\\n                    <!-- End Errors Section -->\\n\\n                    <!-- Order Submit -->\\n                    <div class=\\\"form-submit\\\">\\n                        <button type=\\\"submit\\\" ng-disabled='submitting' class=\\\"btn-primary btn animated pulse infinite finishButton\\\">\\n                            <span ng-if=\\\"!submitting\\\">{{product.orderButtonText}}</span>\\n                            <span ng-if=\\\"submitting\\\" style=\\\"width: 30px; height: 30px;\\\" us-spinner=\\\"{ color: '#8e93a8' }\\\"></span>\\n                        </button>\\n                    </div>\\n                    <!-- End Order Submit -->\\n\\n                </form>\\n                <!-- End Question Form -->\\n            </div>\\n        </div>\\n    </div>\\n</main>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ 510:\n/*!******************************************************!*\\\n  !*** ./src/components/booking/complete.component.js ***!\n  \\******************************************************/\n/*! dynamic exports provided */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar angular = __webpack_require__(/*! angular */ 46);\n\nvar templateUrl = __webpack_require__(/*! ./complete.component.nghtml */ 511);\n\n//Creating bookingPage component on StickyBooking Module\nangular.module('StickyBooking').component('completePage', {\n  templateUrl: templateUrl,\n  bindings: {\n    order: '<'\n  },\n  controller: ['$scope', function CompleteController($scope) {\n    this.$onInit = function () {\n      $scope.order = this.order;\n    };\n  }]\n}); //End Component\n\n/***/ }),\n\n/***/ 511:\n/*!**********************************************************!*\\\n  !*** ./src/components/booking/complete.component.nghtml ***!\n  \\**********************************************************/\n/*! dynamic exports provided */\n/*! all exports used */\n/***/ (function(module, exports) {\n\nvar path = '/Users/nicklandgrebe/dev/StickyBooking/src/components/booking/complete.component.nghtml';\nvar html = \"<main class=\\\"booking-confirm\\\">\\n  <div class=\\\"booking-confirmation-code\\\">\\n    <h6>Your Booking Number Is:</h6>\\n    <h4>#{{ order.verificationCode }}</h4>\\n  </div>\\n  <div class=\\\"booking-confirmation-message\\\">\\n    <h3>Hello {{ order.customer().firstName }}, you are all set!</h3>\\n    <p ng-if='product.postTransactionalMessage'>{{ product.postTransactionalMessage }}</p>\\n    <p ng-if='!product.postTransactionalMessage'>Thank you for scheduling your consultation!</p>\\n  </div>\\n  <hr />\\n  <div class=\\\"booking-confirmation-note\\\">\\n    <p><em>A confirmation email has been sent to {{ order.customer().email }}</em></p>\\n  </div>\\n</main>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ 512:\n/*!*******************************************************!*\\\n  !*** ./src/components/calendar/calendar.component.js ***!\n  \\*******************************************************/\n/*! dynamic exports provided */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar angular = __webpack_require__(/*! angular */ 46);\nvar $ = __webpack_require__(/*! jquery */ 70);\n\nvar moment = __webpack_require__(/*! moment */ 1);\n\nvar _require = __webpack_require__(/*! moment-range */ 138),\n    extendMoment = _require.extendMoment;\n\nvar _ = __webpack_require__(/*! underscore */ 52);\n\nvar templateUrl = __webpack_require__(/*! ./calendar.component.nghtml */ 513);\n\n// add moment-range\nmoment = extendMoment(moment);\n\n//Creating bookingCalendar component on the StickyBooking Module\nangular.module('StickyBooking').component('bookingCalendar', {\n    templateUrl: templateUrl,\n    controller: ['$scope', 'occasionSDKService', function controller($scope, occasionSDKService) {\n        $scope.setTimeSlotsForMonth = function (month, timeSlots) {\n            if (_.isUndefined(month)) return;\n\n            $scope.timeSlotsByMonth[month.format('MM-YYYY')] = timeSlots;\n        };\n\n        $scope.getTimeSlotsForMonth = function (month) {\n            if (_.isUndefined(month)) return;\n\n            return $scope.timeSlotsByMonth[month.format('MM-YYYY')];\n        };\n\n        $scope.$on('initialDataLoaded', function (event, data) {\n            $scope.product = data.product;\n\n            var firstDay = $scope.product.firstTimeSlotStartsAt;\n\n            // Set starting month and year for the calendar to display\n            $scope.activeCalendarMonth = firstDay.startOf('month');\n\n            // Get all time slots for the month, starting at the current moment (i.e. day)\n            occasionSDKService.getTimeSlotsByMonth($scope.product, firstDay).then(function (timeSlots) {\n                $scope.setTimeSlotsForMonth($scope.activeCalendarMonth, timeSlots);\n\n                $scope.$emit('calendarDataLoaded', {\n                    calendarDataLoaded: true,\n                    duration: moment.duration(timeSlots.first().duration, 'minutes')\n                });\n\n                $scope.$apply();\n            });\n        });\n\n        this.$onInit = function () {\n            $scope.calendarWeeks = {};\n            $scope.timeSlotsByMonth = {};\n        };\n\n        // Constructs rows of weeks starting on Sunday and ending on Saturday, for display as a calendar\n        // Each cell of the calendar is a Moment.js date corresponding to that day\n        $scope.getCalendarWeeksForMonth = function (month) {\n            if (!$scope.calendarWeeks[month.format('MM-YYYY')]) {\n                var startDate = moment(month).startOf('month').startOf('week');\n                var endDate = moment(month).endOf('month').endOf('week');\n\n                var weeks = [];\n                var currentWeek = 0;\n                _.each(Array.from(moment.range(startDate, endDate).by('days')), function (moment) {\n                    if (moment.day() == 0) {\n                        weeks[currentWeek] = [moment];\n                    } else {\n                        weeks[currentWeek].push(moment);\n                    }\n\n                    if (moment.day() == 6) {\n                        currentWeek++;\n                    }\n                });\n\n                $scope.calendarWeeks[month.format('MM-YYYY')] = weeks;\n            }\n\n            return $scope.calendarWeeks[month.format('MM-YYYY')];\n        };\n\n        //Moves the activeCalendar month forward to display the next month\n        $scope.moveMonthAhead = function () {\n            var nextMonth = moment($scope.activeCalendarMonth).add(1, 'month');\n\n            if (!_.has($scope.timeSlotsByMonth, nextMonth.format('MM-YYYY'))) {\n                $scope.getNewTimeSlots(nextMonth).then(function () {\n                    $scope.activeCalendarMonth = nextMonth;\n                    $scope.$apply();\n                });\n            } else {\n                $scope.activeCalendarMonth = nextMonth;\n            }\n        };\n\n        //Moves the activeCalendar month back to display the previous month\n        $scope.moveMonthBack = function () {\n            $scope.activeCalendarMonth.subtract(1, 'month');\n        };\n\n        $scope.canMoveMonthBack = function () {\n            return $scope.activeCalendarMonth.isAfter(moment(), 'month');\n        };\n\n        //Gets new month of time slots on month change\n        $scope.getNewTimeSlots = function (month) {\n            $scope.$emit('startLoading');\n\n            return occasionSDKService.getTimeSlotsByMonth($scope.product, month).then(function (newTimeSlots) {\n                console.log(\"Time slots by month\", newTimeSlots);\n                $scope.setTimeSlotsForMonth(month, newTimeSlots);\n                $scope.$emit('stopLoading');\n            }).catch(function (error) {\n                return console.log(\"Error\", error);\n            });\n        };\n\n        //Evaluates what classes should be applied to the date to distinguish availability\n        $scope.getDisplayClassForDay = function (day) {\n            if (day.isBefore($scope.activeCalendarMonth) || day.isAfter(moment($scope.activeCalendarMonth).endOf('month'))) {\n                return 'empty-date';\n            } else if (day.isBefore(moment(), 'day')) {\n                return 'unavailable-day';\n            } else {\n                var timeSlotForDay = $scope.getTimeSlotsForMonth($scope.activeCalendarMonth).detect(function (timeSlot) {\n                    return day.isSame(timeSlot.startsAt, 'day');\n                });\n\n                if (!_.isUndefined(timeSlotForDay)) {\n                    var str = 'available-time-slot';\n                    if ($scope.selectedDate && $scope.selectedDate.isSame(day, 'day')) {\n                        str += ' selected-date';\n                    }\n\n                    return str;\n                } else {\n                    return 'unavailable-day';\n                }\n            }\n        };\n\n        //When date is selected from calendar\n        $scope.onDateSelection = function (day) {\n            if ($scope.getDisplayClassForDay(day) == 'available-time-slot') {\n                $scope.selectedDate = day;\n\n                var availableTimeSlotsForDay = $scope.getTimeSlotsForMonth($scope.activeCalendarMonth).select(function (timeSlot) {\n                    return timeSlot.startsAt.isSame(day, 'day');\n                });\n\n                $scope.$emit('dateSelectedEvent', {\n                    selectedDate: $scope.selectedDate,\n                    availableTimeSlots: availableTimeSlotsForDay\n                });\n            }\n        };\n\n        //Scroll to specified anchor tag\n        $scope.scrollToAnchor = function (aid) {\n            var aTag = $(\"a[name='\" + aid + \"']\");\n            $('html, body').animate({ scrollTop: aTag.offset().top }, 'slow');\n        };\n    }] //End Controller\n\n}); //End Component\n\n/***/ }),\n\n/***/ 513:\n/*!***********************************************************!*\\\n  !*** ./src/components/calendar/calendar.component.nghtml ***!\n  \\***********************************************************/\n/*! dynamic exports provided */\n/*! all exports used */\n/***/ (function(module, exports) {\n\nvar path = '/Users/nicklandgrebe/dev/StickyBooking/src/components/calendar/calendar.component.nghtml';\nvar html = \"<div ng-if='getTimeSlotsForMonth(activeCalendarMonth)'>\\n    <div class=\\\"row month-navigator\\\">\\n        <div class=\\\"col-xs-3\\\">\\n            <a class=\\\"btn btn-default\\\"\\n               ng-if=\\\"canMoveMonthBack()\\\"\\n               ng-click=\\\"moveMonthBack()\\\">\\n\\n                <i class=\\\"fa fa-arrow-left\\\" aria-hidden=\\\"true\\\"></i>\\n            </a>\\n        </div>\\n        <div class=\\\"col-xs-6 text-center\\\">\\n            <h6>{{ activeCalendarMonth.format('MMMM YYYY') }}</h6>\\n        </div>\\n        <div class=\\\"col-xs-3 text-right\\\">\\n            <a class=\\\"btn btn-default\\\" ng-click=\\\"moveMonthAhead()\\\"><i class=\\\"fa fa-arrow-right\\\" aria-hidden=\\\"true\\\"></i></a>\\n        </div>\\n    </div>\\n    <table class=\\\"calendar-table\\\">\\n        <thead>\\n        <tr>\\n            <td>S</td>\\n            <td>M</td>\\n            <td>T</td>\\n            <td>W</td>\\n            <td>T</td>\\n            <td>F</td>\\n            <td>S</td>\\n        </tr>\\n        </thead>\\n        <tr></tr>\\n        <tr class=\\\"calendar-dates\\\" ng-repeat=\\\"(weekIndex, week) in getCalendarWeeksForMonth(activeCalendarMonth)\\\">\\n            <td ng-repeat=\\\"day in week\\\" class=\\\"{{ getDisplayClassForDay(day) }}\\\" ng-click=\\\"onDateSelection(day)\\\">\\n                <span class=\\\"date\\\">\\n                    {{ day.date() }}\\n                </span>\\n            </td>\\n        </tr>\\n    </table>\\n</div>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ 514:\n/*!*********************************************!*\\\n  !*** ./src/services/occasionSDK.service.js ***!\n  \\*********************************************/\n/*! dynamic exports provided */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar ActiveResource = __webpack_require__(/*! active-resource */ 263);\nvar angular = __webpack_require__(/*! angular */ 46);\nvar moment = __webpack_require__(/*! moment */ 1);\nvar Occasion = __webpack_require__(/*! occasion-sdk */ 589);\n\nangular.module('StickyBooking').factory('occasionSDKService', ['$q', function ($q) {\n    var _this = this;\n\n    this.occsnKey = window.OCCSN.api_key;\n\n    var options = { token: this.occsnKey };\n\n    var url = window.OCCSN.host_url;\n    if (url != undefined) {\n        options.baseUrl = ActiveResource.prototype.Links.__constructLink(url, 'api', 'v1');\n    }\n\n    // Create Connection to Occasion SDK using Merchant API Key\n    this.occsn = new Occasion.Client(options);\n\n    // Wrap SDK dates in Moment.js objects\n    this.occsn.Product.afterRequest(function () {\n        if (this.firstTimeSlotStartsAt != null) this.firstTimeSlotStartsAt = moment(this.firstTimeSlotStartsAt);\n    });\n\n    this.occsn.TimeSlot.afterRequest(function () {\n        this.startsAt = moment(this.startsAt);\n    });\n\n    //Private Promises\n    this.queryMyMerchant = $q.when(this.occsn.Merchant.includes('currency').first());\n\n    //Private Functions\n    this.queryTimeSlotsByMonth = function (product, month) {\n        var today = moment();\n        var lowerRange = month.isSame(today, 'month') ? today : month;\n        var upperRange = lowerRange.clone().endOf('month');\n\n        // make between 1-4 parallel requests (about 7 days per request)\n        var numRequests = Math.min(4, Math.ceil(upperRange.diff(lowerRange, 'days') / 7));\n        if (numRequests < 1) numRequests = 1;\n\n        var i = 0;\n        var requests = [];\n\n        var lower = lowerRange.clone();\n        var upper = lowerRange.clone().add(7, 'days');\n        while (i < numRequests) {\n            if (i + 1 == numRequests) upper = upperRange;\n\n            requests.push(product.timeSlots().where({\n                startsAt: {\n                    ge: lower.toDate(),\n                    le: upper.toDate()\n                },\n                status: 'bookable'\n            }).all());\n\n            lower.add(7, 'days');\n            upper.add(7, 'days');\n            i++;\n        }\n\n        return Promise.all(requests).then(function (timeSlotsArray) {\n            return ActiveResource.prototype.Collection.build(timeSlotsArray).map(function (ts) {\n                return ts.toArray();\n            }).flatten();\n        });\n    };\n\n    this.queryProductById = function (id) {\n        return $q.when(this.queryMyMerchant.then(function (merchant) {\n            return merchant.products().find(id);\n        }));\n    };\n\n    this.queryToCreateOrderForProduct = function (product) {\n        return new $q.when(this.occsn.Order.construct({ product: product }));\n    };\n\n    this.queryBuildCard = function (token) {\n        return this.occsn.CreditCard.build({ id: token });\n    };\n\n    this.queryRedeemableType = function (redeemable) {\n        switch (redeemable.klass()) {\n            case this.occsn.Coupon:\n                return 'coupon';\n            case this.occsn.GiftCard:\n                return 'card';\n        }\n    };\n\n    //Return Public Member Variables and Functions\n    return {\n        getMyMerchant: function getMyMerchant() {\n            return _this.queryMyMerchant;\n        },\n        getProductById: function getProductById(id) {\n            return _this.queryProductById(id);\n        },\n        getTimeSlotsByMonth: function getTimeSlotsByMonth(product, month) {\n            return _this.queryTimeSlotsByMonth(product, month);\n        },\n        createOrderForProduct: function createOrderForProduct(product) {\n            return _this.queryToCreateOrderForProduct(product);\n        },\n        buildCard: function buildCard(token) {\n            return _this.queryBuildCard(token);\n        },\n        redeemableType: function redeemableType(redeemable) {\n            return _this.queryRedeemableType(redeemable);\n        }\n    };\n}]);\n\n/***/ }),\n\n/***/ 590:\n/*!****************************************!*\\\n  !*** ./src/components/occsnApp.nghtml ***!\n  \\****************************************/\n/*! dynamic exports provided */\n/*! all exports used */\n/***/ (function(module, exports) {\n\nvar path = '/Users/nicklandgrebe/dev/StickyBooking/src/components/occsnApp.nghtml';\nvar html = \"<booking-page ng-if='!order.persisted()'></booking-page>\\n<complete-page ng-if='order.persisted()' order='order'></complete-page>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ })\n\n},[287]);\n\n\n// WEBPACK FOOTER //\n// javascripts/sticky_booking-client_bundle.js","require('babel-polyfill');\nvar angular = require('angular');\nrequire('angular-animate');\nrequire('angular-sanitize');\nrequire('angular-spinner');\n\nrequire('jquery');\nrequire('chosen-js');\n\nrequire('moment-range');\n\nrequire('animate.css/animate.css');\nrequire('bootstrap/dist/css/bootstrap.css');\n\nrequire('../styles/index.scss');\n\nangular.module('StickyBooking', ['angularSpinner', 'ngAnimate', 'ngSanitize']);\n\nrequire('../components/occsnApp');\n\nangular.element(function() {\n  angular.bootstrap(document, ['StickyBooking']);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/startup/index.js","var angular = require('angular');\nvar $ = require('jquery');\n\nvar moment = require('moment');\nrequire('moment-timezone');\nvar _ = require('underscore');\n\nrequire('../components/booking/booking.component');\nrequire('../components/booking/complete.component');\nrequire('../components/calendar/calendar.component');\nrequire('../services/occasionSDK.service');\n\nvar templateUrl = require('./occsnApp.nghtml');\n\n//Creating bookingPage component on StickyBooking Module\nangular.module('StickyBooking')\n.component('occsnApp', {\n  templateUrl: templateUrl,\n  controller: function AppController($scope) {\n    this.$onInit = function(){\n      $scope.$on('initialDataLoaded', function(event, data){\n        $scope.merchant = data.merchant;\n        $scope.product = data.product;\n\n        document.title = data.product.title;\n      });\n\n      $scope.$on('orderDataLoaded', function(event, data){\n        $scope.order = data.order;\n      });\n    };\n  } //End Controller\n}); //End Component\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/occsnApp.js","var angular = require('angular');\nvar $ = require('jquery');\n\nvar moment = require('moment');\nrequire('moment-timezone');\nvar _ = require('underscore');\n\nvar templateUrl = require('./booking.component.nghtml');\n\n//Creating bookingPage component on StickyBooking Module\nangular.module('StickyBooking')\n    .component('bookingPage', {\n        templateUrl: templateUrl,\n        controller: function BookingController($scope, $http, $filter, $window, occasionSDKService) {\n\n          //Runs On Init\n          this.$onInit = function(){\n              console.log(\"Booking Component Init\");\n              //Call function to load data from SDK Service\n              $scope.displayLoading = true;\n              $scope.initialDataLoaded = false;\n              $scope.calendarDataLoaded = false;\n              $scope.orderLoaded = false;\n              $scope.staticProductID = window.OCCSN.product_id;\n              $scope.orderErrors = null;\n              $scope.activeRedeemable = null;\n              $scope.redeemableError = null;\n              $scope.redeemableStatus = null;\n              $scope.showNav = false;\n              $scope.submitting = false;\n\n              $scope.maxStep = 1;\n              $scope.step = 1;\n\n              angular.element($window).bind('scroll', function() {\n                if(this.pageYOffset > 100) {\n                  $scope.showNav = true;\n\n                  $scope.$apply();\n                }\n              });\n\n              $scope.loadInitialData();\n          };\n\n          // Make initial calls for data and subsequent eager loaded calls\n          $scope.loadInitialData = function(){\n              $scope.merchant = null;\n              $scope.product = null;\n\n              // Initiate several promises at once, wait for all of them to respond before continuing\n              Promise.all([\n                  occasionSDKService.getMyMerchant(),\n                  occasionSDKService.getProductById($scope.staticProductID)\n              ]).then((values) => {\n                  // Populate global variables with returns from promises above\n                  var merchant = values[0];\n                  var product = values[1];\n\n                  $scope.merchant = merchant;\n                  $scope.product = product;\n\n                  // Set PSP (payment service provider) to merchant's\n                  // @example 'cash', 'spreedly', 'square'\n                  $scope.psp = merchant.pspName;\n\n                  // Set moment.js time zone to merchant's\n                  moment.tz.setDefault(merchant.timeZone);\n\n                  // Flash an alert to the merchant to add time slots if the product does not a first time slot\n                  if(_.isNull(product.firstTimeSlotStartsAt)) {\n                      alert(\n                        'Listing has no timeslots. If you are the merchant who owns this listing, add time slots ' +\n                        'so that there are times that can be booked.'\n                      );\n                  }\n\n                  $scope.$broadcast('initialDataLoaded', { product: product } );\n                  $scope.$emit('initialDataLoaded', { merchant: merchant, product: product } );\n                  $scope.initialDataLoaded = true;\n                  $scope.displayLoading = false;\n                  $scope.$apply();\n\n                  // New order for product\n                  occasionSDKService.createOrderForProduct(product)\n                      .then( (order) => {\n                          console.log(\"Order data loaded\");\n                          $scope.order = order;\n                          $scope.orderLoaded = true;\n\n                          $scope.$emit('orderDataLoaded', { order: order } );\n\n                  });\n\n              }).catch( (errors) => {\n                  console.log(errors);\n                  $scope.displayLoading = false;\n                  $scope.$apply();\n\n                  if(errors instanceof TypeError){\n                      alert(\"There was an error retrieving the listing you're looking for. Please try again later.\");\n                  }else{\n                      errors.map(error => {\n                          alert(error.details);\n                      });\n                  }\n              });\n          };\n\n          $scope.$on('calendarDataLoaded', function(event, data){\n            $scope.calendarDataLoaded = data.calendarDataLoaded;\n            $scope.sessionDuration = data.duration.asHours();\n            if(data.duration.asHours() != 1) {\n              $scope.sessionDuration += ' hours';\n            } else {\n              $scope.sessionDuration += ' hour';\n            }\n          });\n\n          $scope.clickGoToStep = function(step) {\n            if(step <= $scope.maxStep) $scope.goToStep(step);\n          };\n\n          $scope.goToStep = function(step) {\n            $scope.step = step;\n            $scope.scrollToAnchor('step-' + step + '-scroller');\n\n            if(step > $scope.maxStep) $scope.maxStep = step;\n          };\n\n          //When a user clicks get started\n          $scope.getStarted = function(){\n            $scope.displayLoading = true;\n\n            $scope.$watch('calendarDataLoaded', function(calendarDataLoaded) {\n                if(calendarDataLoaded) {\n                  $scope.displayLoading = false;\n\n                  $scope.goToStep(1);\n                }\n            });\n          };\n\n          //When date is selected from calendar\n          $scope.$on('dateSelectedEvent', function(event, data){\n              $scope.selectedDate = data.selectedDate;\n              $scope.availableSlots = data.availableTimeSlots;\n\n              $scope.goToStep(2);\n          });\n\n          //When loading animation is started from sub component\n          $scope.$on(\"startLoading\", function(event){\n              $scope.displayLoading = true;\n          });\n\n          //When loading animation is stopped from sub component\n          $scope.$on(\"stopLoading\", function(event){\n              $scope.displayLoading = false;\n          });\n\n          //When time slot is selected\n          $scope.onTimeSlotSelection = function(event, timeSlot){\n              event.preventDefault();\n              $scope.selectedTimeSlot = timeSlot;\n\n              $scope.order.timeSlots().assign([$scope.selectedTimeSlot]);\n\n              if($scope.orderLoaded){\n                  $scope.startOrder();\n              }else{\n                  $scope.displayLoading = true;\n                  $scope.$watch('orderLoaded', function(newValue){\n                      if(newValue){\n                          $scope.displayLoading = false;\n                          $scope.startOrder();\n                      }\n                  });\n              }\n          };\n\n          $scope.isActiveTimeSlot = function(timeSlot) {\n              let activeTimeSlot = $scope.order.timeSlots().target().first();\n              if(_.isUndefined(activeTimeSlot)) return false;\n\n              return activeTimeSlot.startsAt.isSame(timeSlot.startsAt);\n          };\n\n          // Returns a number formatted like \"($NN.NN)\"\n          var numToCurrency = function(n) {\n              return $filter('currency')(n, $scope.merchant.currency().code);\n          };\n\n          // Returns the answer on the order for any of the questions the product asks\n          $scope.answerForQuestion = function(question) {\n            return $scope.order.answers().target().detect((a) => { return a.question() == question });\n          };\n\n          // Formats the title for checkbox questions, which have following permutations:\n          // formControl == 'checkbox'\n          //   category == 'info': TITLE\n          //   category == 'price'\n          //     operation == 'add': TITLE ($99.99)\n          //     operation == 'multiply': TITLE (99.99% extra)\n          //   category == 'price'\n          //     operation == 'subtract': TITLE ($99.99 off)\n          //     operation == 'divide': TITLE (99.99% off)\n          // formControl == 'waiver': TITLE\n          $scope.titleForCheckbox = function(checkbox) {\n              switch(checkbox.formControl) {\n                  case 'checkbox':\n                      switch(checkbox.category) {\n                          case 'price':\n                              switch(checkbox.operation) {\n                                  case 'add':\n                                      return checkbox.title + ' (' + numToCurrency(checkbox.price) + ')';\n                                  case 'multiply':\n                                      return checkbox.title + ' (' + checkbox.percentage + '% extra)';\n                              }\n                              break;\n                          case 'discount':\n                              switch(checkbox.operation) {\n                                  case 'subtract':\n                                      return checkbox.title + ' (' + numToCurrency(checkbox.price) + ' off)';\n                                  case 'divide':\n                                      return checkbox.title + ' (' + checkbox.percentage + '% off)';\n                              }\n                              break;\n                          default:\n                              return checkbox.title;\n                      }\n                      break;\n                  case 'waiver':\n                      return checkbox.title;\n              }\n          };\n\n          // Formats the title for options of dropdowns/option lists to include price if the option has a price\n          $scope.titleForOption = function(option) {\n              var title = option.title;\n\n              if(option.price) title += ' (' + numToCurrency(option.price) + ')';\n\n              return title;\n          };\n\n          // Formats the title for spin buttons that change based on the value of the spin button\n          $scope.titleForSpinButton = function(answer) {\n              var title = answer.question().title;\n\n              if(answer.question().price) {\n                  title += ' ' + answer.value + ' x ' + numToCurrency(answer.question().price) + ' = ';\n                  title += numToCurrency(parseFloat(answer.question().price) * answer.value);\n              }\n\n              if(answer.question().max) {\n                  title += ' (Max of ' + answer.question().max + ')';\n              }\n\n              return title;\n          };\n\n          // Returns the default option from a question's options\n          $scope.defaultOptionFor = function(question) {\n              return question.options().target().detect(function(o) { return o.default; });\n          };\n\n          //When the value of a drop down selector or radio selector changes\n          $scope.optionableQuestionChanged = function(answer, option){\n              answer.assignOption(option);\n              $scope.answerChanged(answer);\n          };\n\n          // Update price on answer change if price calculating question\n          //   On init\n          //   When a question value changes\n          $scope.answerChanged = function(answer){\n              if(answer.question().priceCalculating){\n                  $scope.order.calculatePrice()\n                      .then( (order) => {\n                          console.log(\"Order after calc\", $scope.order.attributes());\n                          $scope.$apply();\n                      })\n                      .catch( (error) => {\n                          console.log(\"Error with recalc\", error);\n                      });\n              }\n          };\n\n          // Indicates whether or not the order has a subtotal, meaning the price and redeemable sections are necessary\n          $scope.hasSubtotal = function() {\n            return !$scope.product.free && parseFloat($scope.order.subtotal) > 0;\n          };\n\n          // Indicates whether or not the order requires payment, meaning the payment section is necessary\n          $scope.requiresPayment = function() {\n              return $scope.hasSubtotal() && parseFloat($scope.order.outstandingBalance) > 0;\n          };\n\n          //When Order and Answers must be configured\n          $scope.startOrder = function(){\n              $scope.optionsHolder = {};\n\n              $scope.goToStep(3);\n\n              //Calculate starting price\n              $scope.order.calculatePrice()\n                  .then( (order) => {\n                      console.log(\"Order after first calc\", $scope.order.attributes());\n\n                      if($scope.psp == \"spreedly\"){\n                          console.log(\"Use Spreedly\");\n                          $scope.useSpreedly();\n                      }\n\n                      if($scope.psp == \"square\"){\n                          console.log(\"Use Square\");\n                          $scope.useSquare();\n                      }\n\n                      $scope.$apply();\n                  })\n                  .catch( (error) => {\n                      console.log(\"Error from calc start price\", error);\n                  });\n          };\n\n          $scope.useSquare = function() {\n              // Create and initialize a payment form object\n              $scope.paymentForm = new SqPaymentForm({\n\n                  // Initialize the payment form elements\n                  applicationId: window.OCCSN.square_key,\n                  inputClass: 'form-control',\n\n                  // Customize the CSS for SqPaymentForm iframe elements\n                  inputStyles: [{\n                      fontSize: '19px'\n                  }],\n\n                  // Initialize the credit card placeholders\n                  cardNumber: {\n                      elementId: 'sq-card-number',\n                      placeholder: '•••• •••• •••• ••••'\n                  },\n                  cvv: {\n                      elementId: 'sq-cvv',\n                      placeholder: 'CVV'\n                  },\n                  expirationDate: {\n                      elementId: 'sq-expiration-date',\n                      placeholder: 'MM/YY'\n                  },\n                  postalCode: {\n                      elementId: 'sq-postal-code',\n                      placeholder: '#####'\n                  },\n\n                  // SqPaymentForm callback functions\n                  callbacks: {\n                      methodsSupported: function (methods) {\n                          var applePayBtn = document.getElementById('sq-apple-pay');\n                          var applePayLabel = document.getElementById('sq-apple-pay-label');\n                          var masterpassBtn = document.getElementById('sq-masterpass');\n                          var masterpassLabel = document.getElementById('sq-masterpass-label');\n\n                          applePayBtn.style.display = 'none';\n                          applePayLabel.style.display = 'none';\n                          masterpassBtn.style.display = 'none';\n                          masterpassLabel.style.display = 'none';\n                          // Only show the button if Apple Pay for Web is enabled\n                          // Otherwise, display the wallet not enabled message.\n                          /*if (methods.applePay === true) {\n                              applePayBtn.style.display = 'inline-block';\n                              applePayLabel.style.display = 'none' ;\n                          }\n                          // Only show the button if Masterpass is enabled\n                          // Otherwise, display the wallet not enabled message.\n                          if (methods.masterpass === true) {\n                              masterpassBtn.style.display = 'inline-block';\n                              masterpassLabel.style.display = 'none';\n                          }*/\n                      },\n                      cardNonceResponseReceived: function(errors, nonce, cardData) {\n                          if (errors) {\n                              //Fill orderErrors array which displays under credit card form\n                              $scope.orderErrors = errors;\n                              $scope.submitting = false;\n                              $scope.$apply();\n\n                              //Log full errors for console\n                              console.log(\"Encountered errors:\");\n                              errors.forEach(function(error) {\n                                  console.log(error);\n                              });\n                          }else{\n                              $scope.creditCard = occasionSDKService.buildCard(nonce);\n                              console.log(\"CARD\", $scope.creditCard);\n                              $scope.order.charge( $scope.creditCard, $scope.order.outstandingBalance );\n\n                              $scope.order.calculatePrice()\n                                  .then( (order) => {\n                                      $scope.submitOrder();\n                                  })\n                                  .catch( (error) => {\n                                      console.log(\"Errors with final calc price\", error);\n                                  });\n                          }\n                      },\n                      unsupportedBrowserDetected: function() {},\n                      inputEventReceived: function(inputEvent) {\n                          switch (inputEvent.eventType) {\n                              case 'focusClassAdded':\n                                  /* HANDLE AS DESIRED */\n                              break;\n                              case 'focusClassRemoved':\n                                  /* HANDLE AS DESIRED */\n                              break;\n                              case 'errorClassAdded':\n                                  /* HANDLE AS DESIRED */\n                                  console.log(\"Error class added\");\n                              break;\n                              case 'errorClassRemoved':\n                                  /* HANDLE AS DESIRED */\n                                  console.log(\"Error class removed\");\n                              break;\n                              case 'cardBrandChanged':\n                                  /* HANDLE AS DESIRED */\n                              break;\n                              case 'postalCodeChanged':\n                                  /* HANDLE AS DESIRED */\n                              break;\n                          }\n                      },\n                      paymentFormLoaded: function() {\n                          console.log(\"Form loaded\");\n                      }\n                  }\n              });\n              $scope.paymentForm.build();\n          };\n\n          $scope.useSpreedly = function(){\n              //Init Spreedly card values\n              Spreedly.init(window.OCCSN.spreedly_key, {\n                  \"numberEl\": \"spreedly-number\",\n                  \"cvvEl\": \"spreedly-cvv\"\n              });\n\n              Spreedly.on(\"ready\", function () {\n                  Spreedly.setFieldType(\"number\", \"text\");\n                  Spreedly.setNumberFormat(\"prettyFormat\");\n                  Spreedly.setPlaceholder(\"number\", \"Card Number\");\n                  Spreedly.setPlaceholder(\"cvv\", \"CVV\");\n                  Spreedly.setStyle(\"number\", 'display: block; width: 95%; height: 36px; padding: 6px 12px; font-size: 16px; line-height: 1.428571429; color: #7b829a; background-color: #fff; background-image: none; border: 1px solid #ccc; -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075); box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075); -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s; -o-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s; transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;');\n                  Spreedly.setStyle(\"cvv\", 'display: block; width: 60px; height: 36px; padding: 6px 12px; font-size: 16px; line-height: 1.428571429; color: #7b829a; background-color: #fff; background-image: none; border: 1px solid #ccc; -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075); box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075); -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s; -o-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s; transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;');\n              });\n\n              Spreedly.on('fieldEvent', function(name, type, activeEl, inputProperties) {\n                  if(type == 'focus'){\n                      Spreedly.setStyle(name,'border-color: #66afe9; outline: 0; -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(102, 175, 233, 0.6); box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(102, 175, 233, 0.6)');\n                  }\n                  if(type == 'blur'){\n                      Spreedly.setStyle(name, 'border: 1px solid #ccc; -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075); box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075); -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s; -o-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s; transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;');\n                  }\n              });\n\n              Spreedly.on('errors', function(errors) {\n                  console.log(\"Spreedly On Errors\", errors);\n                  $scope.orderErrors = errors;\n                  $scope.submitting = false;\n                  $scope.$apply();\n              });\n\n              Spreedly.on('paymentMethod', function(token, pmData) {\n                  $scope.creditCard = occasionSDKService.buildCard(token);\n                  $scope.order.charge( $scope.creditCard, $scope.order.outstandingBalance );\n\n                  $scope.order.calculatePrice()\n                      .then( (order) => {\n                          $scope.submitOrder();\n                      })\n                      .catch( (error) => {\n                          console.log(\"Errors with final calc price\", error);\n                      });\n              });\n          };\n\n          $scope.checkRedeemable = function(){\n              $scope.displayLoading = true;\n\n              $scope.redeemableError = null;\n              $scope.activeRedeemable = null;\n              var code = document.getElementById('redeemableInput').value;\n\n              $scope.product.redeemables().findBy({ code: code })\n                  .then((redeemable) => {\n                      console.log(\"Redeemable\", redeemable);\n                      var type = occasionSDKService.redeemableType(redeemable);\n                      $scope.activeRedeemable = redeemable;\n                      console.log(\"Attr\", $scope.activeRedeemable.attributes());\n\n                      $scope.displayLoading = false;\n                      document.getElementById('redeemableInput').disabled = true;\n\n                      // Apply charge or discount\n                      switch(type) {\n                          case('card'):\n                              var value = parseFloat($scope.activeRedeemable.value);\n                              var balance = parseFloat($scope.order.outstandingBalance);\n                              if(value > balance) value = balance;\n\n                              $scope.order.charge($scope.activeRedeemable, value);\n                              $scope.redeemableStatus = 'Gift Card Applied! - ' + $scope.merchant.currency().code + value + ' Applied';\n                              break;\n                          case('coupon'):\n                              $scope.order.assignCoupon($scope.activeRedeemable);\n                              if($scope.activeRedeemable.attributes().discountFixed != null)\n                                  $scope.redeemableStatus = 'Coupon Applied! - ' + $scope.merchant.currency().code + $scope.activeRedeemable.discountFixed + ' Off';\n                              if($scope.activeRedeemable.attributes().discountPercentage != null)\n                                  $scope.redeemableStatus = 'Coupon Applied! - ' + $scope.activeRedeemable.attributes().discountPercentage + '% Off';\n                              break;\n                      }\n\n                      //Recalc price\n                      $scope.order.calculatePrice()\n                          .then( order => {\n                              console.log(\"Order after calc after redeem\", order);\n                              $scope.$apply();\n                          }).catch( error => {\n                              console.log(\"Error after calc after redeem\", error);\n                          });\n                  })\n                  .catch( (errors) => {\n                      $scope.displayLoading = false;\n                      errors.map( error => {\n                          $scope.redeemableStatus = null;\n                          $scope.redeemableError = error.details;\n                      });\n                      document.getElementById('redeemableInput').value = null;\n                      $scope.$apply();\n                  });\n          };\n\n          $scope.removeRedeemable = function(){\n              $scope.displayLoading = true;\n\n              switch(occasionSDKService.redeemableType($scope.activeRedeemable)){\n                  case('card'):\n                      $scope.order.removeCharge($scope.activeRedeemable);\n                      break;\n                  case('coupon'):\n                      $scope.order.assignCoupon(null);\n                      break;\n              }\n              $scope.activeRedeemable = null;\n              $scope.redeemableStatus = null;\n              $scope.redeemableError = null;\n              document.getElementById('redeemableInput').value = null;\n              document.getElementById('redeemableInput').disabled = false;\n\n              //Recalc price\n              $scope.order.calculatePrice()\n                  .then( order => {\n                      console.log(\"Order after calc after remove redeem\", order);\n                      $scope.displayLoading = false;\n                      $scope.$apply();\n                  }).catch( error => {\n                      console.log(\"Error after calc after remove redeem\", error);\n                      $scope.displayLoading = false;\n                  });\n          };\n\n          $scope.submitPaymentForms = function() {\n              $scope.submitting = true;\n              $scope.orderErrors = null;\n\n              if(!$scope.requiresPayment()) {\n                $scope.submitOrder();\n              } else {\n                switch($scope.psp){\n                  case('cash'):\n                    $scope.submitOrder();\n                    break;\n                  case('square'):\n                    $scope.submitSquareForm();\n                    break;\n                  case('spreedly'):\n                    $scope.submitSpreedlyForm();\n                    break;\n                }\n              }\n          };\n\n          $scope.submitSquareForm = function() {\n              $scope.paymentForm.requestCardNonce();\n          };\n\n          $scope.submitSpreedlyForm = function(){\n              console.log(\"Submit payment form\");\n              var requiredFields = {};\n\n              // Get required, non-sensitive, values from host page\n              requiredFields[\"full_name\"] = document.getElementById(\"full_name\").value;\n              requiredFields[\"month\"] = document.getElementById(\"month\").value;\n              requiredFields[\"year\"] = document.getElementById(\"year\").value;\n\n              Spreedly.tokenizeCreditCard(requiredFields);\n          };\n\n          //When users submits order form\n          $scope.submitOrder = function() {\n              $scope.order.save(() => {\n                $scope.submitting = false;\n\n                if($scope.order.persisted()) {\n                  $scope.$emit('orderDataLoaded', { order: $scope.order } );\n                } else {\n                  $scope.orderErrors = $scope.order.errors().toArray();\n                  $scope.order.removeCharge($scope.creditCard);\n                }\n                $scope.$apply();\n              });\n          };\n\n          //Scroll to specified anchor tag\n          $scope.scrollToAnchor = function(aid){\n              var aTag = $(\"a[name='\"+ aid +\"']\");\n              $('html, body').animate( { scrollTop: aTag.offset().top }, 'slow');\n          };\n\n          //Return a readable time portion of a date\n          $scope.formatToTime = function(dateString){\n              return moment(dateString).format('LT');\n          };\n\n          //Return a readable date portion of a date\n          $scope.formatToDate = function(dateString){\n            return moment(dateString).format('MMMM DD, YYYY');\n          };\n\n          //Return a readable full datetime\n          $scope.formatToFullDatetime = function(dateString) {\n            return moment(dateString).format('dddd MMMM Do, YYYY h:mm A');\n          };\n\n          //Determine which time of day section this timeSlot belongs in\n          $scope.splitByTimeOfDay = function(timeSlot, time) {\n              switch(time){\n                  case('morning'):\n                      return timeSlot.startsAt.hour() < 12;\n                  case('afternoon'):\n                      return timeSlot.startsAt.hour() >= 12 && timeSlot.startsAt.hour() < 18;\n                  case('evening'):\n                      return timeSlot.startsAt.hour() >= 18;\n              }\n          };\n\n      } //End Controller\n}); //End Component\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/booking/booking.component.js","var path = '/Users/nicklandgrebe/dev/StickyBooking/src/components/booking/booking.component.nghtml';\nvar html = \"<main class=\\\"booking-page-container\\\">\\n\\n    <div class=\\\"loadingAnimation\\\" ng-if=\\\"displayLoading\\\">\\n        <span us-spinner=\\\"{ color: '#fff' }\\\"></span>\\n    </div>\\n\\n    <div class=\\\"booking-sidebar\\\" ng-if=\\\"initialDataLoaded\\\" ng-class='{ \\\"booking-sidebar-hidden\\\": !showNav && step == 0 }'>\\n        <div ng-if=\\\"product.status == 'active'\\\">\\n            <ol class=\\\"booking-process\\\" id=\\\"booking-process-status\\\">\\n                <li class=\\\"booking-step\\\" ng-class='{ \\\"booking-step-active\\\": step == 1, \\\"booking-step-complete\\\": step > 1, \\\"booking-step-disabled\\\": maxStep < 1 }'>\\n                  <a href ng-click='clickGoToStep(1)'>Select a Date</a>\\n                </li>\\n                <li class=\\\"booking-step\\\" ng-class='{ \\\"booking-step-active\\\": step == 2, \\\"booking-step-complete\\\": step > 2, \\\"booking-step-disabled\\\": maxStep < 2 }'>\\n                  <a href ng-click='clickGoToStep(2)'>Select a Time</a>\\n                </li>\\n                <li class=\\\"booking-step\\\" ng-class='{ \\\"booking-step-active\\\": step == 3, \\\"booking-step-complete\\\": step > 3, \\\"booking-step-disabled\\\": maxStep < 3 }'>\\n                  <a href ng-click='clickGoToStep(3)'>Your Information</a>\\n                </li>\\n            </ol>\\n        </div>\\n    </div>\\n  \\n    <div class=\\\"booking-content\\\">\\n        <div class=\\\"booking-page-intro\\\">\\n          <h2 class=\\\"booking-page-photographer-name\\\">{{ merchant.name }}</h2>\\n          <div ng-if=\\\"product.status == 'active'\\\">\\n              <div class=\\\"booking-page-welcome-message\\\">\\n                <ng-bind-html ng-bind-html=\\\"product.description\\\"></ng-bind-html>\\n              </div>\\n          </div>\\n          <div ng-if=\\\"product.status != 'active'\\\">\\n              <div class=\\\"booking-page-welcome-message animated slideInLeft\\\">\\n                  <p ng-if=\\\"product.status == 'expired'\\\">\\n                      The last time slot of this product has expired, so no bookings are\\n                      currently accepted. Please contact the merchant if you think this is in error.\\n                  </p>\\n                  <p ng-if=\\\"product.status == 'inactive'\\\">\\n                      This listing is no longer available for sale. Please contact the\\n                      merchant if you think this is may be an error.\\n                  </p>\\n                  <p ng-if=\\\"product.status == 'sold_out'\\\">This listing has sold out.</p>\\n              </div>\\n          </div>\\n        </div>\\n\\n        <!--Get Started section -->\\n        <div class=\\\"booking-page-hero\\\" style=\\\"background-image: url('{{ product.image.url }}');\\\">\\n            <div class=\\\"booking-page-hero-content animated slideInRight\\\" ng-if=\\\"initialDataLoaded\\\">\\n                <h6 class=\\\"get-started-title\\\">Get Started</h6>\\n                <h1 class=\\\"page-title\\\">{{ product.title }}</h1>\\n                <h6 ng-if='sessionDuration' class=\\\"session-length\\\">\\n                  Session Length: {{ sessionDuration }}\\n                </h6>\\n\\n                <button class=\\\"get-started tada infinite\\\"\\n                        ng-click=\\\"getStarted()\\\"\\n                        ng-class=\\\"{ animated: product.status == 'active' }\\\"\\n                        ng-disabled=\\\"product.status != 'active'\\\">\\n\\n                    <svg viewBox=\\\"686 482 141 141\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n                        <path d=\\\"M826.958984,552.5 C826.958984,513.586577 795.413423,482.041016 756.5,482.041016 C717.586577,482.041016 686.041016,513.586577 686.041016,552.5 C686.041016,591.413423 717.586577,622.958984 756.5,622.958984 C795.413423,622.958984 826.958984,591.413423 826.958984,552.5 Z M693.041016,552.5 C693.041016,517.452571 721.452571,489.041016 756.5,489.041016 C791.547429,489.041016 819.958984,517.452571 819.958984,552.5 C819.958984,587.547429 791.547429,615.958984 756.5,615.958984 C721.452571,615.958984 693.041016,587.547429 693.041016,552.5 Z M761.386839,585.043454 L789.042157,557.388135 C791.742872,554.688285 791.742872,550.310967 789.042157,547.611116 C786.346196,544.910834 781.964124,544.910834 779.268163,547.611116 L763.413455,563.463663 L763.413455,524.844307 C763.413455,521.025713 760.319517,517.930478 756.499626,517.930478 C752.680167,517.930478 749.585796,521.025713 749.585796,524.844307 L749.585796,563.463663 L733.731521,547.611116 C731.035127,544.910834 726.653488,544.910834 723.957094,547.611116 C722.604576,548.961041 721.930478,550.730118 721.930478,552.499626 C721.930478,554.269134 722.604576,556.03821 723.957094,557.388135 L751.612412,585.043454 C754.308806,587.743736 758.690878,587.743736 761.386839,585.043454 Z\\\"\\n                          stroke=\\\"none\\\" fill=\\\"#FFFFFF\\\" fill-rule=\\\"evenodd\\\"></path>\\n                    </svg>\\n                </button>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"panes\\\">\\n            <!-- Calendar pane -->\\n            <a name=\\\"step-1-scroller\\\"></a>\\n            <div class=\\\"pane pane-calendar pane-active\\\" id=\\\"step-2\\\" ng-show='maxStep > 0'>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                        <h6>Availability</h6>\\n                        <h3>Select a date on the calendar below to view availability:</h3>\\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"session-duration text-right\\\">\\n                            <h4 class=\\\"duration-count\\\">{{ sessionDuration }}</h4>\\n                            <h6>Session Duration</h6>\\n                        </div>\\n                    </div>\\n                </div>\\n                <hr />\\n\\n                <booking-calendar></booking-calendar>\\n            </div>\\n\\n            <!-- available times-->\\n            <a name=\\\"step-2-scroller\\\"></a>\\n            <div class=\\\"pane pane-available-times clearfix\\\" ng-show='maxStep > 1'>\\n                <div class=\\\"col-md-12\\\">\\n                    <h6>Available Time Slots</h6>\\n                    <h3>Select a time slot on {{ formatToDate(selectedDate) }} to continue booking:</h3>\\n                    <hr />\\n                </div>\\n                <div class=\\\"col-md-4 time-slot-buttons\\\">\\n                    <h6>Morning</h6>\\n                    <button class=\\\"btn btn-primary time-slot\\\"\\n                            ng-repeat=\\\"timeSlot in availableSlots.toArray()\\\"\\n                            ng-if=\\\"splitByTimeOfDay(timeSlot, 'morning')\\\"\\n                            ng-click=\\\"onTimeSlotSelection($event, timeSlot)\\\"\\n                            ng-class='{ \\\"time-slot-active\\\": isActiveTimeSlot(timeSlot) }'>\\n\\n                        {{ formatToTime(timeSlot.startsAt) }}\\n                    </button>\\n                </div>\\n                <div class=\\\"col-md-4 time-slot-buttons\\\">\\n                    <h6>Afternoon</h6>\\n                    <button class=\\\"btn btn-primary time-slot\\\"\\n                            ng-repeat=\\\"timeSlot in availableSlots.toArray()\\\"\\n                            ng-if=\\\"splitByTimeOfDay(timeSlot, 'afternoon')\\\"\\n                            ng-click=\\\"onTimeSlotSelection($event, timeSlot)\\\"\\n                            ng-class='{ \\\"time-slot-active\\\": isActiveTimeSlot(timeSlot) }'>\\n\\n                        {{ formatToTime(timeSlot.startsAt) }}\\n                    </button>\\n                </div>\\n                <div class=\\\"col-md-4 time-slot-buttons\\\">\\n                    <h6>Evening</h6>\\n                    <button class=\\\"btn btn-primary time-slot\\\"\\n                            ng-repeat=\\\"timeSlot in availableSlots.toArray()\\\"\\n                            ng-if=\\\"splitByTimeOfDay(timeSlot, 'evening')\\\"\\n                            ng-click=\\\"onTimeSlotSelection($event, timeSlot)\\\"\\n                            ng-class='{ \\\"time-slot-active\\\": isActiveTimeSlot(timeSlot) }'>\\n\\n                        {{ formatToTime(timeSlot.startsAt) }}\\n                    </button>\\n                </div>\\n            </div>\\n\\n            <!--Customer information pane -->\\n            <a name=\\\"step-3-scroller\\\"></a>\\n            <div class=\\\"pane pane-customer-information\\\" ng-show='maxStep > 2'>\\n                <h6>Your Info</h6>\\n                <h3>We need to collect some information from you to confirm booking:</h3>\\n                <hr />\\n\\n                <!-- Question Form -->\\n                <form id=\\\"questionForm\\\" ng-submit=\\\"submitPaymentForms()\\\">\\n                    <!-- Static Questions, Always Required -->\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"control-label\\\" for=\\\"order_customer_email\\\">First Name*</label>\\n                        <input id=\\\"lastName\\\" placeholder=\\\"First Name\\\" required=\\\"required\\\" type=\\\"text\\\" ng-model=\\\"order.customer().firstName\\\" name=\\\"firstName\\\"\\n                            class=\\\"form-control\\\" autofocus><span class=\\\"message\\\"></span>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"control-label\\\" for=\\\"order_customer_email\\\">Last Name*</label>\\n                        <input id=\\\"firstName\\\" placeholder=\\\"Last Name\\\" required=\\\"required\\\" type=\\\"text\\\" ng-model=\\\"order.customer().lastName\\\" name=\\\"lastName\\\"\\n                            class=\\\"form-control\\\"><span class=\\\"message\\\"></span>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"control-label\\\" for=\\\"order_customer_email\\\">E-mail Address*</label>\\n                        <input id=\\\"email\\\" placeholder=\\\"E-mail\\\" required=\\\"required\\\" type=\\\"email\\\" ng-model=\\\"order.customer().email\\\" name=\\\"email\\\" class=\\\"form-control\\\">\\n                        <span class=\\\"message\\\"></span>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"control-label\\\" for=\\\"order_customer_email\\\">Zip Code*</label>\\n                        <input id=\\\"zip\\\" placeholder=\\\"Zip Code\\\" required=\\\"required\\\" type=\\\"text\\\" ng-model=\\\"order.customer().zip\\\" name=\\\"zip\\\" class=\\\"form-control\\\">\\n                        <span class=\\\"message\\\"></span>\\n                    </div>\\n                    <!-- End of Static Questions -->\\n\\n                    <!-- Dynamic Questions, Set by Merchant -->\\n                    <div ng-repeat=\\\"(index, question) in product.questions().toArray()\\\" ng-init=\\\"answer = answerForQuestion(question)\\\">\\n                        <div class=\\\"form-group\\\" ng-if=\\\"question.formControl != 'separator'\\\">\\n                            <label ng-if=\\\"question.formControl == 'text_input' || question.formControl == 'text_area' || question.formControl == 'option_list' || question.formControl == 'drop_down'\\\">\\n                                {{ question.title }}<span ng-if='question.required'>*</span>\\n                            </label>\\n                            <!-- Render different from control based on answer.question.formControl type -->\\n                            <!-- Text Input -->\\n                            <input class=\\\"form-control\\\"\\n                                   ng-if=\\\"question.formControl == 'text_input'\\\"\\n                                   ng-model=\\\"answer.value\\\"\\n                                   ng-required=\\\"question.required\\\"\\n                                   placeholder=\\\"{{ question.title }}\\\"\\n                            />\\n                            <!-- Text Area -->\\n                            <textarea class=\\\"form-control\\\" rows=\\\"4\\\"\\n                                      ng-if=\\\"question.formControl == 'text_area'\\\"\\n                                      ng-model=\\\"answer.value\\\"\\n                                      ng-required=\\\"question.required\\\"\\n                                      placeholder=\\\"Your Response\\\">\\n                            </textarea>\\n                            <!-- Option List -->\\n                            <div ng-if=\\\"question.formControl == 'option_list'\\\">\\n                                <span class=\\\"invisible\\\"\\n                                      ng-init=\\\"optionsHolder[question.id] = defaultOptionFor(question); optionableQuestionChanged(answer, optionsHolder[question.id])\\\">\\n                                </span>\\n                                <div class=\\\"radio\\\" ng-repeat=\\\"option in question.options().target().toArray()\\\">\\n                                  <label>\\n                                    <input type=\\\"radio\\\"\\n                                           name=\\\"{{question.id}}\\\"\\n                                           ng-value=\\\"option\\\"\\n                                           ng-model=\\\"optionsHolder[question.id]\\\"\\n                                           ng-change=\\\"optionableQuestionChanged(answer, optionsHolder[question.id])\\\" />\\n\\n                                    {{ titleForOption(option) }}\\n                                  </label>\\n                                </div>\\n                            </div>\\n                            <!-- Drop Down -->\\n                            <select class=\\\"form-control\\\"\\n                                    ng-if=\\\"question.formControl == 'drop_down'\\\"\\n                                    ng-model=\\\"optionsHolder[question.id]\\\"\\n                                    ng-change=\\\"optionableQuestionChanged(answer, optionsHolder[question.id])\\\"\\n                                    ng-options=\\\"option as titleForOption(option) for option in question.options().target().toArray()\\\"\\n                                    ng-init=\\\"optionsHolder[question.id] = defaultOptionFor(question); optionableQuestionChanged(answer, optionsHolder[question.id])\\\">\\n\\n                                <option value=\\\"\\\">-- Please select --</option>\\n                            </select>\\n                            <!-- Spin Button -->\\n                            <div ng-if=\\\"question.formControl == 'spin_button'\\\">\\n                                <label>\\n                                    <span>{{ titleForSpinButton(answer) }}</span>\\n                                    <span ng-if='question.required'>*</span>\\n                                </label>\\n                                <ul class=\\\"spinner-input list-inline\\\">\\n                                    <li>\\n                                        <input class=\\\"form-control value-input\\\" readonly=\\\"\\\"\\n                                               ng-model=\\\"answer.value\\\"\\n                                               ng-init=\\\"answer.value = question.min\\\" />\\n                                    </li>\\n                                    <li>\\n                                        <div class=\\\"btn-group btn-group-lg\\\">\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-info update-price stepper-minus\\\"\\n                                                    ng-click=\\\"answer.value = answer.value - 1; answerChanged(answer)\\\"\\n                                                    ng-disabled=\\\"answer.value == question.min\\\">\\n                                                -\\n                                            </button>\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-info update-price stepper-plus\\\"\\n                                                    ng-click=\\\"answer.value = answer.value + 1; answerChanged(answer)\\\"\\n                                                    ng-disabled=\\\"answer.value >= question.max\\\">\\n                                                +\\n                                            </button>\\n                                        </div>\\n                                    </li>\\n                                </ul>\\n                            </div>\\n                            <!-- Checkbox && Waiver -->\\n                            <div ng-if=\\\"question.formControl == 'checkbox' || question.formControl == 'waiver'\\\">\\n                                <div class=\\\"well well-sm waiver\\\" ng-if=\\\"question.formControl == 'waiver'\\\">\\n                                    <ng-bind-html ng-bind-html=\\\"question.waiverText\\\">\\n                                    </ng-bind-html>\\n                                </div>\\n\\n                                <div class=\\\"checkbox\\\">\\n                                    <label>\\n                                        <input type=\\\"checkbox\\\"\\n                                               ng-model=\\\"answer.value\\\"\\n                                               ng-change=\\\"answerChanged(answer)\\\"\\n                                               ng-required=\\\"question.required || question.formControl == 'waiver'\\\"\\n                                               ng-init=\\\"answer.value = false\\\" />\\n\\n                                        <span>{{ titleForCheckbox(question) }}</span>\\n                                        <span ng-if=\\\"question.required || question.formControl == 'waiver'\\\">*</span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <!-- Text Output -->\\n                            <h3 class=\\\"question-text-output\\\" ng-if=\\\"question.formControl == 'text_output' && question.displayAsTitle\\\">{{ question.title }}</h3>\\n                            <p  class=\\\"question-text-output\\\" ng-if=\\\"question.formControl == 'text_output' && !question.displayAsTitle\\\">{{ question.title }}</p>\\n                        </div>\\n                        <hr ng-if=\\\"question.formControl == 'separator'\\\">\\n                    </div>\\n                    <!-- End of Dynamic Questions -->\\n\\n                    <!-- Price Table -->\\n                    <div class=\\\"alert priceTable\\\" ng-if='hasSubtotal()' ng-class=\\\"{ 'alert-warning': psp == 'cash', 'alert-success': psp != 'cash' }\\\">\\n                        <div ng-if=\\\"psp == 'cash'\\\">\\n                            <strong>No payment required now. Payment will be collected at the venue.</strong>\\n                            <br><br>\\n                        </div>\\n                        <table>\\n                            <tr ng-if=\\\"order.subtotal != order.total\\\">\\n                                <td>Subtotal:</td>\\n                                <td>{{ order.subtotal | currency:merchant.currency().code }}</td>\\n                            </tr>\\n                            <tr ng-if=\\\"order.tax != 0 && order.tax != null\\\">\\n                                <td>Tax:</td>\\n                                <td>{{ order.tax | currency:merchant.currency().code }}</td>\\n                            </tr>\\n                            <tr ng-if=\\\"order.couponAmount != null\\\">\\n                                <td>Discount:</td>\\n                                <td>-{{ order.couponAmount | currency:merchant.currency().code }}</td>\\n                            </tr>\\n                            <tr ng-class=\\\"{ 'borderTop': order.subtotal != order.total }\\\">\\n                                <td><strong>Total:</strong></td>\\n                                <td>{{ order.total | currency:merchant.currency().code }}</td>\\n                            </tr>\\n                            <tr ng-if=\\\"order.outstandingBalance != order.total\\\">\\n                                <td>Balance due:</td>\\n                                <td>{{ order.outstandingBalance | currency:merchant.currency().code }}</td>\\n                            </tr>\\n                        </table>\\n                    </div>\\n                    <!-- End Price Table -->\\n                    <!-- Redeemables Section -->\\n                    <div id=\\\"redeemables\\\" ng-if=\\\"product.hasRedeemables && hasSubtotal()\\\">\\n                        <br><br>\\n                        <h3>Gift Cards & Coupons</h3>\\n                        <hr>\\n\\n                        <div class=\\\"form-group hasButton\\\">\\n                            <input type=\\\"text\\\" id=\\\"redeemableInput\\\" name=\\\"redeemableInput\\\" class=\\\"form-control\\\" placeholder=\\\"Gift Card Number or Coupon Code\\\" ng-model=\\\"redeemableInput\\\" />\\n                            <input type=\\\"button\\\" class=\\\"btn-primary btn\\\" ng-if=\\\"activeRedeemable == null\\\" value=\\\"Apply\\\" ng-click=\\\"checkRedeemable()\\\" />\\n                            <input type=\\\"button\\\" class=\\\"btn-danger btn\\\" ng-if=\\\"activeRedeemable != null\\\" value=\\\"Remove\\\" ng-click=\\\"removeRedeemable()\\\" />\\n                        </div>\\n                        <p class=\\\"appliedStatus\\\" ng-if=\\\"redeemableStatus != null\\\">{{ redeemableStatus }}</p>\\n                        <p class=\\\"appliedError\\\" ng-if=\\\"redeemableError != null\\\">{{ redeemableError }}</p>\\n                    </div>\\n                    <!-- End Redeemables Section -->\\n\\n                    <!-- Checkout Forms -->\\n                    <div ng-show='requiresPayment()'>\\n\\n                        <!-- Spreedly Checkout Form -->\\n                        <div id=\\\"payment-form\\\" class=\\\"ccForm\\\" ng-if=\\\"psp == 'spreedly'\\\">\\n                            <h3>Pay with Card</h3>\\n                            <hr>\\n\\n                            <input type=\\\"hidden\\\" name=\\\"payment_method_token\\\" id=\\\"payment_method_token\\\">\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"control-label\\\" for=\\\"full_name\\\">Name On Card</label>\\n                                <input type=\\\"text\\\" id=\\\"full_name\\\" name=\\\"full_name\\\" class=\\\"form-control\\\" placeholder=\\\"Name On Card\\\">\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"control-label\\\">Credit Card Number</label>\\n                                <div id=\\\"spreedly-number\\\" class=\\\"spreedly-input\\\"></div>\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"control-label\\\" for=\\\"spreedly-exp-month\\\">Expiration Date</label>\\n                                <input type=\\\"text\\\" id=\\\"month\\\" name=\\\"month\\\" maxlength=\\\"2\\\" class=\\\"form-control\\\" placeholder=\\\"MM\\\">\\n                                <input type=\\\"text\\\" id=\\\"year\\\" name=\\\"year\\\" maxlength=\\\"4\\\" class=\\\"form-control\\\" placeholder=\\\"YYYY\\\">\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"control-label\\\">CVV</label>\\n                                <div id=\\\"spreedly-cvv\\\" class=\\\"spreedly-input\\\"></div>\\n                            </div>\\n                        </div>\\n                        <!-- End Spreedly Checkout Form -->\\n\\n                        <!-- Square Checkout Form -->\\n                        <div id=\\\"sq-ccbox\\\" ng-if=\\\"psp == 'square'\\\">\\n                            <h3>Pay with Card</h3>\\n                            <hr>\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"control-label\\\">Card Number:</label>\\n                                <div id=\\\"sq-card-number\\\"></div>\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"control-label\\\">CVV:</label>\\n                                <div id=\\\"sq-cvv\\\"></div>\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"control-label\\\">Expiration Date:</label>\\n                                <div id=\\\"sq-expiration-date\\\"></div>\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"control-label\\\">Postal Code:</label>\\n                                <div id=\\\"sq-postal-code\\\"></div>\\n                            </div>\\n\\n                            <input type=\\\"hidden\\\" id=\\\"card-nonce\\\" name=\\\"nonce\\\">\\n                        </div>\\n                        <div id=\\\"sq-walletbox\\\" ng-if=\\\"psp == 'square'\\\">\\n                            <div id=\\\"sq-apple-pay-label\\\" class=\\\"wallet-not-enabled\\\">Apple Pay for Web not enabled</div>\\n                            <!-- Placholder for Apple Pay for Web button -->\\n                            <button id=\\\"sq-apple-pay\\\" class=\\\"button-apple-pay\\\"></button>\\n\\n                            <div id=\\\"sq-masterpass-label\\\" class=\\\"wallet-not-enabled\\\">Masterpass not enabled</div>\\n                            <!-- Placholder for Masterpass button -->\\n                            <button id=\\\"sq-masterpass\\\" class=\\\"button-masterpass\\\"></button>\\n                        </div>\\n                        <!-- End Square Checkout Form -->\\n                    </div>\\n                    <!-- End Checkout Forms -->\\n\\n                    <!-- Errors Section -->\\n                    <div class=\\\"alert alert-danger\\\" ng-if=\\\"orderErrors != null && orderErrors.length > 0\\\">\\n                        <h4>There were issues with your order:</h4>\\n                        <ul>\\n                            <li ng-repeat=\\\"(errorIndex, errorValue) in orderErrors\\\">{{ errorValue.message }}</li>\\n                        </ul>\\n                    </div>\\n                    <!-- End Errors Section -->\\n\\n                    <!-- Order Submit -->\\n                    <div class=\\\"form-submit\\\">\\n                        <button type=\\\"submit\\\" ng-disabled='submitting' class=\\\"btn-primary btn animated pulse infinite finishButton\\\">\\n                            <span ng-if=\\\"!submitting\\\">{{product.orderButtonText}}</span>\\n                            <span ng-if=\\\"submitting\\\" style=\\\"width: 30px; height: 30px;\\\" us-spinner=\\\"{ color: '#8e93a8' }\\\"></span>\\n                        </button>\\n                    </div>\\n                    <!-- End Order Submit -->\\n\\n                </form>\\n                <!-- End Question Form -->\\n            </div>\\n        </div>\\n    </div>\\n</main>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/booking/booking.component.nghtml\n// module id = 509\n// module chunks = 1","var angular = require('angular');\n\nvar templateUrl = require('./complete.component.nghtml');\n\n//Creating bookingPage component on StickyBooking Module\nangular.module('StickyBooking')\n.component('completePage', {\n  templateUrl: templateUrl,\n  bindings: {\n    order: '<'\n  },\n  controller: function CompleteController($scope) {\n    this.$onInit = function(){\n      $scope.order = this.order;\n    };\n  }\n}); //End Component\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/booking/complete.component.js","var path = '/Users/nicklandgrebe/dev/StickyBooking/src/components/booking/complete.component.nghtml';\nvar html = \"<main class=\\\"booking-confirm\\\">\\n  <div class=\\\"booking-confirmation-code\\\">\\n    <h6>Your Booking Number Is:</h6>\\n    <h4>#{{ order.verificationCode }}</h4>\\n  </div>\\n  <div class=\\\"booking-confirmation-message\\\">\\n    <h3>Hello {{ order.customer().firstName }}, you are all set!</h3>\\n    <p ng-if='product.postTransactionalMessage'>{{ product.postTransactionalMessage }}</p>\\n    <p ng-if='!product.postTransactionalMessage'>Thank you for scheduling your consultation!</p>\\n  </div>\\n  <hr />\\n  <div class=\\\"booking-confirmation-note\\\">\\n    <p><em>A confirmation email has been sent to {{ order.customer().email }}</em></p>\\n  </div>\\n</main>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/booking/complete.component.nghtml\n// module id = 511\n// module chunks = 1","var angular = require('angular');\nvar $ = require('jquery');\n\nvar moment = require('moment');\nvar { extendMoment } = require('moment-range');\nvar _ = require('underscore');\n\nvar templateUrl = require('./calendar.component.nghtml');\n\n// add moment-range\nmoment = extendMoment(moment);\n\n//Creating bookingCalendar component on the StickyBooking Module\nangular.module('StickyBooking')\n    .component('bookingCalendar', {\n        templateUrl: templateUrl,\n        controller: function($scope, occasionSDKService){\n            $scope.setTimeSlotsForMonth = function(month, timeSlots) {\n                if(_.isUndefined(month)) return;\n\n                $scope.timeSlotsByMonth[month.format('MM-YYYY')] = timeSlots;\n            };\n\n            $scope.getTimeSlotsForMonth = function(month) {\n                if(_.isUndefined(month)) return;\n\n                return $scope.timeSlotsByMonth[month.format('MM-YYYY')];\n            };\n\n            $scope.$on('initialDataLoaded', function(event, data) {\n                $scope.product = data.product;\n\n                var firstDay = $scope.product.firstTimeSlotStartsAt;\n\n                // Set starting month and year for the calendar to display\n                $scope.activeCalendarMonth = firstDay.startOf('month');\n\n                // Get all time slots for the month, starting at the current moment (i.e. day)\n                occasionSDKService.getTimeSlotsByMonth($scope.product, firstDay)\n                .then((timeSlots) => {\n                    $scope.setTimeSlotsForMonth($scope.activeCalendarMonth, timeSlots);\n\n                    $scope.$emit('calendarDataLoaded', {\n                        calendarDataLoaded: true,\n                        duration: moment.duration(timeSlots.first().duration, 'minutes')\n                    });\n\n                    $scope.$apply();\n                });\n            });\n\n            this.$onInit = function(){\n                $scope.calendarWeeks = {};\n                $scope.timeSlotsByMonth = {};\n            };\n\n            // Constructs rows of weeks starting on Sunday and ending on Saturday, for display as a calendar\n            // Each cell of the calendar is a Moment.js date corresponding to that day\n            $scope.getCalendarWeeksForMonth = function(month) {\n                if(!$scope.calendarWeeks[month.format('MM-YYYY')]) {\n                  let startDate = moment(month).startOf('month').startOf('week');\n                  let endDate = moment(month).endOf('month').endOf('week');\n\n                  var weeks = [];\n                  var currentWeek = 0;\n                  _.each(Array.from(moment.range(startDate, endDate).by('days')), function(moment) {\n                    if(moment.day() == 0) {\n                      weeks[currentWeek] = [moment];\n                    } else {\n                      weeks[currentWeek].push(moment);\n                    }\n\n                    if(moment.day() == 6) {\n                      currentWeek++;\n                    }\n                  });\n\n                  $scope.calendarWeeks[month.format('MM-YYYY')] = weeks;\n                }\n\n              return $scope.calendarWeeks[month.format('MM-YYYY')];\n            };\n\n            //Moves the activeCalendar month forward to display the next month\n            $scope.moveMonthAhead = function() {\n                var nextMonth = moment($scope.activeCalendarMonth).add(1, 'month');\n\n                if(!_.has($scope.timeSlotsByMonth, nextMonth.format('MM-YYYY'))) {\n                    $scope.getNewTimeSlots(nextMonth)\n                        .then(() => {\n                            $scope.activeCalendarMonth = nextMonth;\n                            $scope.$apply();\n                        });\n                } else {\n                    $scope.activeCalendarMonth = nextMonth;\n                }\n            };\n\n            //Moves the activeCalendar month back to display the previous month\n            $scope.moveMonthBack = function(){\n                $scope.activeCalendarMonth.subtract(1, 'month');\n            };\n\n            $scope.canMoveMonthBack = function() {\n                return $scope.activeCalendarMonth.isAfter(moment(), 'month');\n            };\n\n            //Gets new month of time slots on month change\n            $scope.getNewTimeSlots = function(month){\n                $scope.$emit('startLoading');\n\n                return occasionSDKService.getTimeSlotsByMonth($scope.product, month)\n                    .then((newTimeSlots) => {\n                        console.log(\"Time slots by month\", newTimeSlots);\n                        $scope.setTimeSlotsForMonth(month, newTimeSlots);\n                        $scope.$emit('stopLoading');\n                    })\n                    .catch( (error) => console.log(\"Error\", error) );\n            };\n\n            //Evaluates what classes should be applied to the date to distinguish availability\n            $scope.getDisplayClassForDay = function(day){\n                if(day.isBefore($scope.activeCalendarMonth) || day.isAfter(moment($scope.activeCalendarMonth).endOf('month'))) {\n                    return 'empty-date';\n                } else if(day.isBefore(moment(), 'day')) {\n                    return 'unavailable-day';\n                } else {\n                    var timeSlotForDay = $scope.getTimeSlotsForMonth($scope.activeCalendarMonth).detect(function(timeSlot) {\n                        return day.isSame(timeSlot.startsAt, 'day');\n                    });\n\n                    if(!_.isUndefined(timeSlotForDay)) {\n                        var str = 'available-time-slot';\n                        if($scope.selectedDate && $scope.selectedDate.isSame(day, 'day')) {\n                            str += ' selected-date';\n                        }\n\n                        return str;\n                    } else {\n                        return 'unavailable-day';\n                    }\n                }\n            };\n\n            //When date is selected from calendar\n            $scope.onDateSelection = function(day){\n                if($scope.getDisplayClassForDay(day) == 'available-time-slot'){\n                    $scope.selectedDate = day;\n\n                    var availableTimeSlotsForDay =\n                        $scope.getTimeSlotsForMonth($scope.activeCalendarMonth).select(function(timeSlot) {\n                            return timeSlot.startsAt.isSame(day, 'day');\n                        });\n\n                    $scope.$emit('dateSelectedEvent', {\n                        selectedDate: $scope.selectedDate,\n                        availableTimeSlots: availableTimeSlotsForDay\n                    });\n                }\n            };\n\n            //Scroll to specified anchor tag\n            $scope.scrollToAnchor = function(aid){\n                var aTag = $(\"a[name='\"+ aid +\"']\");\n                $('html, body').animate( { scrollTop: aTag.offset().top }, 'slow');\n            };\n\n        } //End Controller\n\n    }); //End Component\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/calendar/calendar.component.js","var path = '/Users/nicklandgrebe/dev/StickyBooking/src/components/calendar/calendar.component.nghtml';\nvar html = \"<div ng-if='getTimeSlotsForMonth(activeCalendarMonth)'>\\n    <div class=\\\"row month-navigator\\\">\\n        <div class=\\\"col-xs-3\\\">\\n            <a class=\\\"btn btn-default\\\"\\n               ng-if=\\\"canMoveMonthBack()\\\"\\n               ng-click=\\\"moveMonthBack()\\\">\\n\\n                <i class=\\\"fa fa-arrow-left\\\" aria-hidden=\\\"true\\\"></i>\\n            </a>\\n        </div>\\n        <div class=\\\"col-xs-6 text-center\\\">\\n            <h6>{{ activeCalendarMonth.format('MMMM YYYY') }}</h6>\\n        </div>\\n        <div class=\\\"col-xs-3 text-right\\\">\\n            <a class=\\\"btn btn-default\\\" ng-click=\\\"moveMonthAhead()\\\"><i class=\\\"fa fa-arrow-right\\\" aria-hidden=\\\"true\\\"></i></a>\\n        </div>\\n    </div>\\n    <table class=\\\"calendar-table\\\">\\n        <thead>\\n        <tr>\\n            <td>S</td>\\n            <td>M</td>\\n            <td>T</td>\\n            <td>W</td>\\n            <td>T</td>\\n            <td>F</td>\\n            <td>S</td>\\n        </tr>\\n        </thead>\\n        <tr></tr>\\n        <tr class=\\\"calendar-dates\\\" ng-repeat=\\\"(weekIndex, week) in getCalendarWeeksForMonth(activeCalendarMonth)\\\">\\n            <td ng-repeat=\\\"day in week\\\" class=\\\"{{ getDisplayClassForDay(day) }}\\\" ng-click=\\\"onDateSelection(day)\\\">\\n                <span class=\\\"date\\\">\\n                    {{ day.date() }}\\n                </span>\\n            </td>\\n        </tr>\\n    </table>\\n</div>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/calendar/calendar.component.nghtml\n// module id = 513\n// module chunks = 1","var ActiveResource = require('active-resource');\nvar angular = require('angular');\nvar moment = require('moment');\nvar Occasion = require('occasion-sdk');\n\nangular.module('StickyBooking')\n    .factory('occasionSDKService', function($q) {\n        this.occsnKey = window.OCCSN.api_key;\n\n        let options = { token: this.occsnKey };\n\n        let url = window.OCCSN.host_url;\n        if(url != undefined) {\n            options.baseUrl = ActiveResource.prototype.Links.__constructLink(url, 'api', 'v1');\n        }\n\n        // Create Connection to Occasion SDK using Merchant API Key\n        this.occsn = new Occasion.Client(options);\n\n        // Wrap SDK dates in Moment.js objects\n        this.occsn.Product.afterRequest(function() {\n            if(this.firstTimeSlotStartsAt != null) this.firstTimeSlotStartsAt = moment(this.firstTimeSlotStartsAt);\n        });\n\n        this.occsn.TimeSlot.afterRequest(function() {\n            this.startsAt = moment(this.startsAt);\n        });\n\n        //Private Promises\n        this.queryMyMerchant = $q.when(this.occsn.Merchant.includes('currency').first());\n\n        //Private Functions\n        this.queryTimeSlotsByMonth = function(product, month) {\n            var today = moment();\n            var lowerRange = month.isSame(today, 'month') ? today : month;\n            var upperRange = lowerRange.clone().endOf('month');\n\n            // make between 1-4 parallel requests (about 7 days per request)\n            var numRequests = Math.min(4, Math.ceil(upperRange.diff(lowerRange, 'days') / 7));\n            if(numRequests < 1) numRequests = 1;\n\n            var i = 0;\n            var requests = [];\n\n            var lower = lowerRange.clone();\n            var upper = lowerRange.clone().add(7, 'days');\n            while(i < numRequests) {\n                if(i + 1 == numRequests) upper = upperRange;\n\n                requests.push(product.timeSlots().where({\n                    startsAt: {\n                        ge: lower.toDate(),\n                        le: upper.toDate()\n                    },\n                    status: 'bookable'\n                }).all());\n\n                lower.add(7, 'days');\n                upper.add(7, 'days');\n                i++;\n            }\n\n            return Promise.all(requests)\n            .then(function(timeSlotsArray) {\n                return ActiveResource.prototype.Collection\n                    .build(timeSlotsArray)\n                    .map(function(ts) { return ts.toArray() })\n                    .flatten();\n            });\n        };\n\n        this.queryProductById = function(id) {\n            return $q.when(\n              this.queryMyMerchant\n                .then((merchant) => { return merchant.products().find(id); })\n            );\n        };\n\n        this.queryToCreateOrderForProduct = function(product) {\n            return new $q.when(\n                this.occsn.Order.construct({ product: product })\n            );\n        };\n\n        this.queryBuildCard = function(token) {\n            return this.occsn.CreditCard.build({ id: token });\n        };\n\n        this.queryRedeemableType = function(redeemable) {\n            switch(redeemable.klass()) {\n              case this.occsn.Coupon:\n                  return 'coupon';\n              case this.occsn.GiftCard:\n                  return 'card';\n            }\n        }\n\n        //Return Public Member Variables and Functions\n        return {\n            getMyMerchant: () => {\n                return this.queryMyMerchant;\n            },\n            getProductById: (id) => {\n                return this.queryProductById(id);\n            },\n            getTimeSlotsByMonth: (product, month) => {\n                return this.queryTimeSlotsByMonth(product, month);\n            },\n            createOrderForProduct: (product) => {\n                return this.queryToCreateOrderForProduct(product);\n            },\n            buildCard: (token) => {\n                return this.queryBuildCard(token);\n            },\n            redeemableType: (redeemable) => {\n                return this.queryRedeemableType(redeemable);\n            }\n        }\n\n    });\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/occasionSDK.service.js","var path = '/Users/nicklandgrebe/dev/StickyBooking/src/components/occsnApp.nghtml';\nvar html = \"<booking-page ng-if='!order.persisted()'></booking-page>\\n<complete-page ng-if='order.persisted()' order='order'></complete-page>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/occsnApp.nghtml\n// module id = 590\n// module chunks = 1"],"sourceRoot":""}